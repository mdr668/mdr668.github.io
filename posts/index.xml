<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - mdr's Blog</title><link>/posts/</link><description>所有文章 | mdr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 11 Sep 2024 18:20:40 +0800</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml"/><item><title>ChatGPT 提示语句</title><link>/chatgpt-%E6%8F%90%E7%A4%BA%E8%AF%AD%E5%8F%A5/</link><pubDate>Wed, 11 Sep 2024 18:20:40 +0800</pubDate><author>mdr</author><guid>/chatgpt-%E6%8F%90%E7%A4%BA%E8%AF%AD%E5%8F%A5/</guid><description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">我需要把Python快速转化为 HTML 。以下是我的需求和背景：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">**背景：**
</span></span><span class="line"><span class="cl">我想在网页上输入一个loginPassword和deviceId,然后把结果返回到网页上,现在接口已经有用Python写好了
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">**想法：**
</span></span><span class="line"><span class="cl">网页上放置两个输入框和一个按钮，点击按钮执行功能,然后把结果输出到网页。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">**具体需求：**
</span></span><span class="line"><span class="cl">- 我希望页面有一个 header ，上面有几个按钮，中间是一些文本和按钮的美观排列。
</span></span><span class="line"><span class="cl">- 一个简单的页面设计，只能使用 HTML 和 CSS ，不需要 Vue/React 等复杂框架。
</span></span><span class="line"><span class="cl">- 中间一个文本框显示结果
</span></span><span class="line"><span class="cl">- 数据请求过程参考Python用js重写
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">请给出完整的代码。
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>iOS15使用palera1n越狱之后的一些问题</title><link>/ios15%E4%BD%BF%E7%94%A8palera1n%E8%B6%8A%E7%8B%B1%E4%B9%8B%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 11 Sep 2024 18:05:30 +0800</pubDate><author>mdr</author><guid>/ios15%E4%BD%BF%E7%94%A8palera1n%E8%B6%8A%E7%8B%B1%E4%B9%8B%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</guid><description><![CDATA[<ol>
<li>使用-c -f 先创建FakeFS, 再使用-f 进行有根越狱</li>
<li>越狱之后先使用<code>ssh mobile@127.0.0.1 -p 2222</code> 登录,然后使用 <code>sudo passwd root</code> 设置root密码</li>
<li>root登录之后没有命令的历史记录,在 /var/root 创建文件 .zshrc</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Lines configured by zsh-newuser-install
</span></span><span class="line"><span class="cl">HISTFILE=~/.histfile
</span></span><span class="line"><span class="cl">HISTSIZE=999
</span></span><span class="line"><span class="cl">SAVEHIST=1000
</span></span><span class="line"><span class="cl"># End of lines configured by zsh-newuser-install
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后执行以下 <code>zsh</code></p>]]></description></item><item><title>AppStore_API</title><link>/appstore_api/</link><pubDate>Fri, 16 Aug 2024 16:21:38 +0800</pubDate><author>mdr</author><guid>/appstore_api/</guid><description><![CDATA[<p>转自: <a href="https://fann.im/blog/2018/05/15/app-store-front-code/"target="_blank" rel="external nofollow noopener noreferrer">https://fann.im/blog/2018/05/15/app-store-front-code/</a></p>
<p>X-Apple-Store-Front header is needed to scrape in App Store.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">// 29 or 26 or 9
</span></span><span class="line"><span class="cl">CN 143465-19,29
</span></span><span class="line"><span class="cl">US 143441-1,29
</span></span><span class="line"><span class="cl">JP 143462-9,29
</span></span><span class="line"><span class="cl">KR 143466-13,29
</span></span><span class="line"><span class="cl">HK 143463-18,29
</span></span><span class="line"><span class="cl">AU 143460,29
</span></span><span class="line"><span class="cl">TW 143470-18,29
</span></span><span class="line"><span class="cl">CA 143455-6,29
</span></span><span class="line"><span class="cl">DK 143458-2,29
</span></span><span class="line"><span class="cl">RU 143469-16,29
</span></span><span class="line"><span class="cl">ID 143476-2,29
</span></span><span class="line"><span class="cl">TR 143480-2,29
</span></span><span class="line"><span class="cl">GR 143448-2,29
</span></span><span class="line"><span class="cl">DE 143443-4,29
</span></span><span class="line"><span class="cl">IT 143450-7,29
</span></span><span class="line"><span class="cl">NO 143457-2,29
</span></span><span class="line"><span class="cl">FR 143442-3,29
</span></span><span class="line"><span class="cl">TH 143475-2,29
</span></span><span class="line"><span class="cl">SE 143456-17,29
</span></span><span class="line"><span class="cl">FI 143447-2,29
</span></span><span class="line"><span class="cl">GB 143444,29
</span></span><span class="line"><span class="cl">NL 143452-10,29
</span></span><span class="line"><span class="cl">BR 143503-15,29
</span></span><span class="line"><span class="cl">PT 143453-24,29
</span></span><span class="line"><span class="cl">MX 143468-28,29
</span></span><span class="line"><span class="cl">ES 143454-8,29
</span></span><span class="line"><span class="cl">VN 143471-2,29
</span></span></code></pre></td></tr></table>
</div>
</div><p>App info:</p>]]></description></item><item><title>Mach-O注入删除动态库insert_dyliboptool</title><link>/mach-o%E6%B3%A8%E5%85%A5%E5%88%A0%E9%99%A4%E5%8A%A8%E6%80%81%E5%BA%93insert_dyliboptool/</link><pubDate>Thu, 28 Dec 2023 15:23:13 +0800</pubDate><author>mdr</author><guid>/mach-o%E6%B3%A8%E5%85%A5%E5%88%A0%E9%99%A4%E5%8A%A8%E6%80%81%E5%BA%93insert_dyliboptool/</guid><description><![CDATA[<p>如果要让现成的App，执行自己的代码可以通过注入动态库，</p>
<p>静态的注入可以使用optool工具修改MachO的Load Commands然后重签，</p>
<p>动态运行时可以使用dlopen 或 Bundle(path: &ldquo;**.bundle&rdquo;).load()加载</p>]]></description></item><item><title>油猴脚本如何点击alert提示框</title><link>/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%A6%82%E4%BD%95%E7%82%B9%E5%87%BBalert%E6%8F%90%E7%A4%BA%E6%A1%86/</link><pubDate>Thu, 28 Dec 2023 14:22:50 +0800</pubDate><author>mdr</author><guid>/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%A6%82%E4%BD%95%E7%82%B9%E5%87%BBalert%E6%8F%90%E7%A4%BA%E6%A1%86/</guid><description>&lt;p>有的时候，网页会弹出alert提示框，用脚本的话，通常就会卡到这里了，那么Tampermonkey如何点击alert提示框呢？&lt;/p>
&lt;p>搜索了解了下，其实点击做不到的话，换个角度问题就迎刃而解了。比如劫持alert事件。&lt;/p></description></item><item><title>20230325合肥之旅</title><link>/20230325%E5%90%88%E8%82%A5%E4%B9%8B%E6%97%85/</link><pubDate>Fri, 28 Apr 2023 00:16:24 +0800</pubDate><author>mdr</author><guid>/20230325%E5%90%88%E8%82%A5%E4%B9%8B%E6%97%85/</guid><description><![CDATA[<h4 id="20230325">20230325</h4>
<p><strong>农大北门夜市小街</strong>
首先来到了农大北门夜市小街,在这里我们吃了炸年糕 卷饼 温州瘦肉丸,在逛回来的时候又在年糕的摊位吃了火腿肠
熙熙攘攘的,人多但是不挤.本来想进农大的校园里面看一下的,但是都装了人脸识别的设备,遂作罢
</p>]]></description></item><item><title>MWeb上面的hugo一键发布脚本</title><link>/mweb%E4%B8%8A%E9%9D%A2%E7%9A%84hugo%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/</link><pubDate>Thu, 27 Apr 2023 15:52:05 +0800</pubDate><author>mdr</author><guid>/mweb%E4%B8%8A%E9%9D%A2%E7%9A%84hugo%E4%B8%80%E9%94%AE%E5%8F%91%E5%B8%83%E8%84%9A%E6%9C%AC/</guid><description><![CDATA[<p>使用前需要先指定hugo sites的路径</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">fileDir</span><span class="o">={{</span>fileDir<span class="o">}}</span>
</span></span><span class="line"><span class="cl"><span class="nv">cdate</span><span class="o">=</span><span class="k">$(</span>date +%Y-%m-%dT%H:%M:%S+08:00<span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">hugo_path</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">fileDir</span><span class="p">%????</span><span class="si">}</span><span class="s2">/hugo_blogs&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">pagesname</span><span class="o">=</span><span class="s2">&#34;{{title}}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">filename</span><span class="o">={{</span>fileName<span class="o">}}</span>
</span></span><span class="line"><span class="cl"><span class="nv">mweb_mediapath</span><span class="o">={{</span>fileDir<span class="o">}}</span>/media/<span class="si">${</span><span class="nv">filename</span><span class="p">%???</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#拷贝文档目录</span>
</span></span><span class="line"><span class="cl"><span class="nv">pagespath</span><span class="o">=</span><span class="nv">$hugo_path</span>/content/posts/<span class="nv">$pagesname</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="nv">$pagespath</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    mkdir <span class="s2">&#34;</span><span class="nv">$pagespath</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">cp -rf <span class="s2">&#34;{{filePath}}&#34;</span> <span class="s2">&#34;</span><span class="nv">$pagespath</span><span class="s2">&#34;</span>/index.md
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sed -i <span class="s2">&#34;&#34;</span> -e <span class="s1">&#39;1 d&#39;</span> <span class="s2">&#34;</span><span class="nv">$pagespath</span><span class="s2">&#34;</span>/index.md
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sed -i <span class="s2">&#34;&#34;</span> -e <span class="s1">&#39;1 i \
</span></span></span><span class="line"><span class="cl"><span class="s1">---\
</span></span></span><span class="line"><span class="cl"><span class="s1">title: &#39;</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">pagesname</span><span class="si">}</span><span class="s2">&#34;</span><span class="s1">&#39;\
</span></span></span><span class="line"><span class="cl"><span class="s1">date: &#39;</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">cdate</span><span class="si">}</span><span class="s2">&#34;</span><span class="s1">&#39;\
</span></span></span><span class="line"><span class="cl"><span class="s1">author:\
</span></span></span><span class="line"><span class="cl"><span class="s1">  name: 猫大人\
</span></span></span><span class="line"><span class="cl"><span class="s1">description: \
</span></span></span><span class="line"><span class="cl"><span class="s1">keywords:\
</span></span></span><span class="line"><span class="cl"><span class="s1">tags:\
</span></span></span><span class="line"><span class="cl"><span class="s1">  - 随笔\
</span></span></span><span class="line"><span class="cl"><span class="s1">categories:\
</span></span></span><span class="line"><span class="cl"><span class="s1">  - 随笔\
</span></span></span><span class="line"><span class="cl"><span class="s1">hiddenFromHomePage: false\
</span></span></span><span class="line"><span class="cl"><span class="s1">hiddenFromSearch: false\
</span></span></span><span class="line"><span class="cl"><span class="s1">resources:\
</span></span></span><span class="line"><span class="cl"><span class="s1">  - name: \
</span></span></span><span class="line"><span class="cl"><span class="s1">    src: \
</span></span></span><span class="line"><span class="cl"><span class="s1">toc: true\
</span></span></span><span class="line"><span class="cl"><span class="s1">password:\
</span></span></span><span class="line"><span class="cl"><span class="s1">---\&#39;</span> <span class="s2">&#34;</span><span class="nv">$pagespath</span><span class="s2">&#34;</span>/index.md
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#拷贝资源目录</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> -d <span class="s2">&#34;</span><span class="nv">$mweb_mediapath</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nv">mediapath</span><span class="o">=</span><span class="nv">$hugo_path</span>/content/posts/<span class="s2">&#34;</span><span class="nv">$pagesname</span><span class="s2">&#34;</span>/media/
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="nv">$mediapath</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">   mkdir <span class="s2">&#34;</span><span class="nv">$mediapath</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">cp -rf <span class="s2">&#34;</span><span class="nv">$mweb_mediapath</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$mediapath</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> <span class="nv">$hugo_path</span>
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;pages: </span><span class="nv">$pagesname</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">git push
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>lldb调试iOS配置</title><link>/lldb%E8%B0%83%E8%AF%95ios%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 27 Apr 2023 11:04:24 +0800</pubDate><author>mdr</author><guid>/lldb%E8%B0%83%E8%AF%95ios%E9%85%8D%E7%BD%AE/</guid><description><![CDATA[<p>1.拷贝debugserver到本地计算机中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">scp -P 2222 root@127.0.0.1:/Developer/usr/bin/debugserver ./debugserver。
</span></span></code></pre></td></tr></table>
</div>
</div><p>2.然后用ldid添加权限。
由于ldid不支持fat二进制文件，所以要给debugserver瘦身，通过lipo指定要支持的指令类型，例如：</p>]]></description></item><item><title>使用 LLDBTrace 还原算法</title><link>/%E4%BD%BF%E7%94%A8-lldbtrace-%E8%BF%98%E5%8E%9F%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 27 Apr 2023 10:24:21 +0800</pubDate><author>mdr</author><guid>/%E4%BD%BF%E7%94%A8-lldbtrace-%E8%BF%98%E5%8E%9F%E7%AE%97%E6%B3%95/</guid><description><![CDATA[<p>lldbtrace链接 <a href="https://github.com/yangyss/lldb-trace"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yangyss/lldb-trace</a></p>
<h3 id="首先利用-lldbtrace-处理一个bug">首先利用 lldbtrace 处理一个BUG</h3>
<p>有个经过 VMP 加固的结果一直不符合预期,大概定位一下位置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    memset(dest,0,0x10000);
</span></span><span class="line"><span class="cl">    ByteToHexStr(dvChr,dest,dvChrLen);
</span></span><span class="line"><span class="cl">    printf(&#34;进入前:%s\n&#34;,dest);
</span></span><span class="line"><span class="cl">               
</span></span><span class="line"><span class="cl">    byteTurn(dvChr, dvChrLen, 0x5);//字节翻转加密
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    memset(dest2,0,0x10000);
</span></span><span class="line"><span class="cl">    ByteToHexStr(dvChr,dest,dvChrLen);
</span></span><span class="line"><span class="cl">    printf(&#34;进入后:%s\n&#34;,dest);
</span></span></code></pre></td></tr></table>
</div>
</div><p>byteTurn函数的功能是对字节分别进行翻转,并加上一个值</p>]]></description></item><item><title>iOS 系统调用号</title><link>/ios-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%8F%B7/</link><pubDate>Thu, 27 Apr 2023 00:02:29 +0000</pubDate><author>mdr</author><guid>/ios-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%8F%B7/</guid><description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span><span class="lnt">291
</span><span class="lnt">292
</span><span class="lnt">293
</span><span class="lnt">294
</span><span class="lnt">295
</span><span class="lnt">296
</span><span class="lnt">297
</span><span class="lnt">298
</span><span class="lnt">299
</span><span class="lnt">300
</span><span class="lnt">301
</span><span class="lnt">302
</span><span class="lnt">303
</span><span class="lnt">304
</span><span class="lnt">305
</span><span class="lnt">306
</span><span class="lnt">307
</span><span class="lnt">308
</span><span class="lnt">309
</span><span class="lnt">310
</span><span class="lnt">311
</span><span class="lnt">312
</span><span class="lnt">313
</span><span class="lnt">314
</span><span class="lnt">315
</span><span class="lnt">316
</span><span class="lnt">317
</span><span class="lnt">318
</span><span class="lnt">319
</span><span class="lnt">320
</span><span class="lnt">321
</span><span class="lnt">322
</span><span class="lnt">323
</span><span class="lnt">324
</span><span class="lnt">325
</span><span class="lnt">326
</span><span class="lnt">327
</span><span class="lnt">328
</span><span class="lnt">329
</span><span class="lnt">330
</span><span class="lnt">331
</span><span class="lnt">332
</span><span class="lnt">333
</span><span class="lnt">334
</span><span class="lnt">335
</span><span class="lnt">336
</span><span class="lnt">337
</span><span class="lnt">338
</span><span class="lnt">339
</span><span class="lnt">340
</span><span class="lnt">341
</span><span class="lnt">342
</span><span class="lnt">343
</span><span class="lnt">344
</span><span class="lnt">345
</span><span class="lnt">346
</span><span class="lnt">347
</span><span class="lnt">348
</span><span class="lnt">349
</span><span class="lnt">350
</span><span class="lnt">351
</span><span class="lnt">352
</span><span class="lnt">353
</span><span class="lnt">354
</span><span class="lnt">355
</span><span class="lnt">356
</span><span class="lnt">357
</span><span class="lnt">358
</span><span class="lnt">359
</span><span class="lnt">360
</span><span class="lnt">361
</span><span class="lnt">362
</span><span class="lnt">363
</span><span class="lnt">364
</span><span class="lnt">365
</span><span class="lnt">366
</span><span class="lnt">367
</span><span class="lnt">368
</span><span class="lnt">369
</span><span class="lnt">370
</span><span class="lnt">371
</span><span class="lnt">372
</span><span class="lnt">373
</span><span class="lnt">374
</span><span class="lnt">375
</span><span class="lnt">376
</span><span class="lnt">377
</span><span class="lnt">378
</span><span class="lnt">379
</span><span class="lnt">380
</span><span class="lnt">381
</span><span class="lnt">382
</span><span class="lnt">383
</span><span class="lnt">384
</span><span class="lnt">385
</span><span class="lnt">386
</span><span class="lnt">387
</span><span class="lnt">388
</span><span class="lnt">389
</span><span class="lnt">390
</span><span class="lnt">391
</span><span class="lnt">392
</span><span class="lnt">393
</span><span class="lnt">394
</span><span class="lnt">395
</span><span class="lnt">396
</span><span class="lnt">397
</span><span class="lnt">398
</span><span class="lnt">399
</span><span class="lnt">400
</span><span class="lnt">401
</span><span class="lnt">402
</span><span class="lnt">403
</span><span class="lnt">404
</span><span class="lnt">405
</span><span class="lnt">406
</span><span class="lnt">407
</span><span class="lnt">408
</span><span class="lnt">409
</span><span class="lnt">410
</span><span class="lnt">411
</span><span class="lnt">412
</span><span class="lnt">413
</span><span class="lnt">414
</span><span class="lnt">415
</span><span class="lnt">416
</span><span class="lnt">417
</span><span class="lnt">418
</span><span class="lnt">419
</span><span class="lnt">420
</span><span class="lnt">421
</span><span class="lnt">422
</span><span class="lnt">423
</span><span class="lnt">424
</span><span class="lnt">425
</span><span class="lnt">426
</span><span class="lnt">427
</span><span class="lnt">428
</span><span class="lnt">429
</span><span class="lnt">430
</span><span class="lnt">431
</span><span class="lnt">432
</span><span class="lnt">433
</span><span class="lnt">434
</span><span class="lnt">435
</span><span class="lnt">436
</span><span class="lnt">437
</span><span class="lnt">438
</span><span class="lnt">439
</span><span class="lnt">440
</span><span class="lnt">441
</span><span class="lnt">442
</span><span class="lnt">443
</span><span class="lnt">444
</span><span class="lnt">445
</span><span class="lnt">446
</span><span class="lnt">447
</span><span class="lnt">448
</span><span class="lnt">449
</span><span class="lnt">450
</span><span class="lnt">451
</span><span class="lnt">452
</span><span class="lnt">453
</span><span class="lnt">454
</span><span class="lnt">455
</span><span class="lnt">456
</span><span class="lnt">457
</span><span class="lnt">458
</span><span class="lnt">459
</span><span class="lnt">460
</span><span class="lnt">461
</span><span class="lnt">462
</span><span class="lnt">463
</span><span class="lnt">464
</span><span class="lnt">465
</span><span class="lnt">466
</span><span class="lnt">467
</span><span class="lnt">468
</span><span class="lnt">469
</span><span class="lnt">470
</span><span class="lnt">471
</span><span class="lnt">472
</span><span class="lnt">473
</span><span class="lnt">474
</span><span class="lnt">475
</span><span class="lnt">476
</span><span class="lnt">477
</span><span class="lnt">478
</span><span class="lnt">479
</span><span class="lnt">480
</span><span class="lnt">481
</span><span class="lnt">482
</span><span class="lnt">483
</span><span class="lnt">484
</span><span class="lnt">485
</span><span class="lnt">486
</span><span class="lnt">487
</span><span class="lnt">488
</span><span class="lnt">489
</span><span class="lnt">490
</span><span class="lnt">491
</span><span class="lnt">492
</span><span class="lnt">493
</span><span class="lnt">494
</span><span class="lnt">495
</span><span class="lnt">496
</span><span class="lnt">497
</span><span class="lnt">498
</span><span class="lnt">499
</span><span class="lnt">500
</span><span class="lnt">501
</span><span class="lnt">502
</span><span class="lnt">503
</span><span class="lnt">504
</span><span class="lnt">505
</span><span class="lnt">506
</span><span class="lnt">507
</span><span class="lnt">508
</span><span class="lnt">509
</span><span class="lnt">510
</span><span class="lnt">511
</span><span class="lnt">512
</span><span class="lnt">513
</span><span class="lnt">514
</span><span class="lnt">515
</span><span class="lnt">516
</span><span class="lnt">517
</span><span class="lnt">518
</span><span class="lnt">519
</span><span class="lnt">520
</span><span class="lnt">521
</span><span class="lnt">522
</span><span class="lnt">523
</span><span class="lnt">524
</span><span class="lnt">525
</span><span class="lnt">526
</span><span class="lnt">527
</span><span class="lnt">528
</span><span class="lnt">529
</span><span class="lnt">530
</span><span class="lnt">531
</span><span class="lnt">532
</span><span class="lnt">533
</span><span class="lnt">534
</span><span class="lnt">535
</span><span class="lnt">536
</span><span class="lnt">537
</span><span class="lnt">538
</span><span class="lnt">539
</span><span class="lnt">540
</span><span class="lnt">541
</span><span class="lnt">542
</span><span class="lnt">543
</span><span class="lnt">544
</span><span class="lnt">545
</span><span class="lnt">546
</span><span class="lnt">547
</span><span class="lnt">548
</span><span class="lnt">549
</span><span class="lnt">550
</span><span class="lnt">551
</span><span class="lnt">552
</span><span class="lnt">553
</span><span class="lnt">554
</span><span class="lnt">555
</span><span class="lnt">556
</span><span class="lnt">557
</span><span class="lnt">558
</span><span class="lnt">559
</span><span class="lnt">560
</span><span class="lnt">561
</span><span class="lnt">562
</span><span class="lnt">563
</span><span class="lnt">564
</span><span class="lnt">565
</span><span class="lnt">566
</span><span class="lnt">567
</span><span class="lnt">568
</span><span class="lnt">569
</span><span class="lnt">570
</span><span class="lnt">571
</span><span class="lnt">572
</span><span class="lnt">573
</span><span class="lnt">574
</span><span class="lnt">575
</span><span class="lnt">576
</span><span class="lnt">577
</span><span class="lnt">578
</span><span class="lnt">579
</span><span class="lnt">580
</span><span class="lnt">581
</span><span class="lnt">582
</span><span class="lnt">583
</span><span class="lnt">584
</span><span class="lnt">585
</span><span class="lnt">586
</span><span class="lnt">587
</span><span class="lnt">588
</span><span class="lnt">589
</span><span class="lnt">590
</span><span class="lnt">591
</span><span class="lnt">592
</span><span class="lnt">593
</span><span class="lnt">594
</span><span class="lnt">595
</span><span class="lnt">596
</span><span class="lnt">597
</span><span class="lnt">598
</span><span class="lnt">599
</span><span class="lnt">600
</span><span class="lnt">601
</span><span class="lnt">602
</span><span class="lnt">603
</span><span class="lnt">604
</span><span class="lnt">605
</span><span class="lnt">606
</span><span class="lnt">607
</span><span class="lnt">608
</span><span class="lnt">609
</span><span class="lnt">610
</span><span class="lnt">611
</span><span class="lnt">612
</span><span class="lnt">613
</span><span class="lnt">614
</span><span class="lnt">615
</span><span class="lnt">616
</span><span class="lnt">617
</span><span class="lnt">618
</span><span class="lnt">619
</span><span class="lnt">620
</span><span class="lnt">621
</span><span class="lnt">622
</span><span class="lnt">623
</span><span class="lnt">624
</span><span class="lnt">625
</span><span class="lnt">626
</span><span class="lnt">627
</span><span class="lnt">628
</span><span class="lnt">629
</span><span class="lnt">630
</span><span class="lnt">631
</span><span class="lnt">632
</span><span class="lnt">633
</span><span class="lnt">634
</span><span class="lnt">635
</span><span class="lnt">636
</span><span class="lnt">637
</span><span class="lnt">638
</span><span class="lnt">639
</span><span class="lnt">640
</span><span class="lnt">641
</span><span class="lnt">642
</span><span class="lnt">643
</span><span class="lnt">644
</span><span class="lnt">645
</span><span class="lnt">646
</span><span class="lnt">647
</span><span class="lnt">648
</span><span class="lnt">649
</span><span class="lnt">650
</span><span class="lnt">651
</span><span class="lnt">652
</span><span class="lnt">653
</span><span class="lnt">654
</span><span class="lnt">655
</span><span class="lnt">656
</span><span class="lnt">657
</span><span class="lnt">658
</span><span class="lnt">659
</span><span class="lnt">660
</span><span class="lnt">661
</span><span class="lnt">662
</span><span class="lnt">663
</span><span class="lnt">664
</span><span class="lnt">665
</span><span class="lnt">666
</span><span class="lnt">667
</span><span class="lnt">668
</span><span class="lnt">669
</span><span class="lnt">670
</span><span class="lnt">671
</span><span class="lnt">672
</span><span class="lnt">673
</span><span class="lnt">674
</span><span class="lnt">675
</span><span class="lnt">676
</span><span class="lnt">677
</span><span class="lnt">678
</span><span class="lnt">679
</span><span class="lnt">680
</span><span class="lnt">681
</span><span class="lnt">682
</span><span class="lnt">683
</span><span class="lnt">684
</span><span class="lnt">685
</span><span class="lnt">686
</span><span class="lnt">687
</span><span class="lnt">688
</span><span class="lnt">689
</span><span class="lnt">690
</span><span class="lnt">691
</span><span class="lnt">692
</span><span class="lnt">693
</span><span class="lnt">694
</span><span class="lnt">695
</span><span class="lnt">696
</span><span class="lnt">697
</span><span class="lnt">698
</span><span class="lnt">699
</span><span class="lnt">700
</span><span class="lnt">701
</span><span class="lnt">702
</span><span class="lnt">703
</span><span class="lnt">704
</span><span class="lnt">705
</span><span class="lnt">706
</span><span class="lnt">707
</span><span class="lnt">708
</span><span class="lnt">709
</span><span class="lnt">710
</span><span class="lnt">711
</span><span class="lnt">712
</span><span class="lnt">713
</span><span class="lnt">714
</span><span class="lnt">715
</span><span class="lnt">716
</span><span class="lnt">717
</span><span class="lnt">718
</span><span class="lnt">719
</span><span class="lnt">720
</span><span class="lnt">721
</span><span class="lnt">722
</span><span class="lnt">723
</span><span class="lnt">724
</span><span class="lnt">725
</span><span class="lnt">726
</span><span class="lnt">727
</span><span class="lnt">728
</span><span class="lnt">729
</span><span class="lnt">730
</span><span class="lnt">731
</span><span class="lnt">732
</span><span class="lnt">733
</span><span class="lnt">734
</span><span class="lnt">735
</span><span class="lnt">736
</span><span class="lnt">737
</span><span class="lnt">738
</span><span class="lnt">739
</span><span class="lnt">740
</span><span class="lnt">741
</span><span class="lnt">742
</span><span class="lnt">743
</span><span class="lnt">744
</span><span class="lnt">745
</span><span class="lnt">746
</span><span class="lnt">747
</span><span class="lnt">748
</span><span class="lnt">749
</span><span class="lnt">750
</span><span class="lnt">751
</span><span class="lnt">752
</span><span class="lnt">753
</span><span class="lnt">754
</span><span class="lnt">755
</span><span class="lnt">756
</span><span class="lnt">757
</span><span class="lnt">758
</span><span class="lnt">759
</span><span class="lnt">760
</span><span class="lnt">761
</span><span class="lnt">762
</span><span class="lnt">763
</span><span class="lnt">764
</span><span class="lnt">765
</span><span class="lnt">766
</span><span class="lnt">767
</span><span class="lnt">768
</span><span class="lnt">769
</span><span class="lnt">770
</span><span class="lnt">771
</span><span class="lnt">772
</span><span class="lnt">773
</span><span class="lnt">774
</span><span class="lnt">775
</span><span class="lnt">776
</span><span class="lnt">777
</span><span class="lnt">778
</span><span class="lnt">779
</span><span class="lnt">780
</span><span class="lnt">781
</span><span class="lnt">782
</span><span class="lnt">783
</span><span class="lnt">784
</span><span class="lnt">785
</span><span class="lnt">786
</span><span class="lnt">787
</span><span class="lnt">788
</span><span class="lnt">789
</span><span class="lnt">790
</span><span class="lnt">791
</span><span class="lnt">792
</span><span class="lnt">793
</span><span class="lnt">794
</span><span class="lnt">795
</span><span class="lnt">796
</span><span class="lnt">797
</span><span class="lnt">798
</span><span class="lnt">799
</span><span class="lnt">800
</span><span class="lnt">801
</span><span class="lnt">802
</span><span class="lnt">803
</span><span class="lnt">804
</span><span class="lnt">805
</span><span class="lnt">806
</span><span class="lnt">807
</span><span class="lnt">808
</span><span class="lnt">809
</span><span class="lnt">810
</span><span class="lnt">811
</span><span class="lnt">812
</span><span class="lnt">813
</span><span class="lnt">814
</span><span class="lnt">815
</span><span class="lnt">816
</span><span class="lnt">817
</span><span class="lnt">818
</span><span class="lnt">819
</span><span class="lnt">820
</span><span class="lnt">821
</span><span class="lnt">822
</span><span class="lnt">823
</span><span class="lnt">824
</span><span class="lnt">825
</span><span class="lnt">826
</span><span class="lnt">827
</span><span class="lnt">828
</span><span class="lnt">829
</span><span class="lnt">830
</span><span class="lnt">831
</span><span class="lnt">832
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="mi">0</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">indirect</span> <span class="n">syscall</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">1</span>	<span class="n">AUE_EXIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">void</span> <span class="n">exit</span><span class="p">(</span><span class="ne">int</span> <span class="n">rval</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">2</span>	<span class="n">AUE_FORK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fork</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">read</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">cbuf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">write</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">cbuf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">5</span>	<span class="n">AUE_OPEN_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">open</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">6</span>	<span class="n">AUE_CLOSE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_close</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span>	<span class="n">AUE_WAIT4</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">wait4</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">status</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">rusage</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">8</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">creat</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">9</span>	<span class="n">AUE_LINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">link</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">link</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">10</span>	<span class="n">AUE_UNLINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">unlink</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">11</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">execv</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">12</span>	<span class="n">AUE_CHDIR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chdir</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">13</span>	<span class="n">AUE_FCHDIR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchdir</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">14</span>	<span class="n">AUE_MKNOD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mknod</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dev</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">15</span>	<span class="n">AUE_CHMOD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chmod</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">16</span>	<span class="n">AUE_CHOWN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chown</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">uid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">gid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">17</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="k">break</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">18</span>	<span class="n">AUE_GETFSSTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getfsstat</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="ne">int</span> <span class="n">bufsize</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">19</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">lseek</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">20</span>	<span class="n">AUE_GETPID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getpid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">21</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">mount</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">22</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">umount</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">23</span>	<span class="n">AUE_SETUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setuid</span><span class="p">(</span><span class="n">uid_t</span> <span class="n">uid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">24</span>	<span class="n">AUE_GETUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getuid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">25</span>	<span class="n">AUE_GETEUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">geteuid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">26</span>	<span class="n">AUE_PTRACE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ptrace</span><span class="p">(</span><span class="ne">int</span> <span class="n">req</span><span class="p">,</span> <span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="ne">int</span> <span class="n">data</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">27</span>	<span class="n">AUE_RECVMSG</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">recvmsg</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">struct</span> <span class="n">msghdr</span> <span class="o">*</span><span class="n">msg</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">28</span>	<span class="n">AUE_SENDMSG</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sendmsg</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">msg</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">29</span>	<span class="n">AUE_RECVFROM</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">recvfrom</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="ne">int</span> <span class="o">*</span><span class="n">fromlenaddr</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">30</span>	<span class="n">AUE_ACCEPT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">accept</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">name</span><span class="p">,</span> <span class="n">socklen_t</span>	<span class="o">*</span><span class="n">anamelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">31</span>	<span class="n">AUE_GETPEERNAME</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getpeername</span><span class="p">(</span><span class="ne">int</span> <span class="n">fdes</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">asa</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="o">*</span><span class="n">alen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">32</span>	<span class="n">AUE_GETSOCKNAME</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getsockname</span><span class="p">(</span><span class="ne">int</span> <span class="n">fdes</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">asa</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="o">*</span><span class="n">alen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">27</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">28</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">29</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">30</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">31</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">32</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">33</span>	<span class="n">AUE_ACCESS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">access</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">34</span>	<span class="n">AUE_CHFLAGS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chflags</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">35</span>	<span class="n">AUE_FCHFLAGS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchflags</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">36</span>	<span class="n">AUE_SYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sync</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">37</span>	<span class="n">AUE_KILL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kill</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">signum</span><span class="p">,</span> <span class="ne">int</span> <span class="n">posix</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">38</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">stat</span>  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">39</span>	<span class="n">AUE_GETPPID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getppid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">40</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">lstat</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">41</span>	<span class="n">AUE_DUP</span>		<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_dup</span><span class="p">(</span><span class="n">u_int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">42</span>	<span class="n">AUE_PIPE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pipe</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">43</span>	<span class="n">AUE_GETEGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getegid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">44</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">profil</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">45</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ktrace</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">46</span>	<span class="n">AUE_SIGACTION</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigaction</span><span class="p">(</span><span class="ne">int</span> <span class="n">signum</span><span class="p">,</span> <span class="n">struct</span> <span class="n">__sigaction</span> <span class="o">*</span><span class="n">nsa</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sigaction</span> <span class="o">*</span><span class="n">osa</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">47</span>	<span class="n">AUE_GETGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getgid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">48</span>	<span class="n">AUE_SIGPROCMASK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigprocmask</span><span class="p">(</span><span class="ne">int</span> <span class="n">how</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">mask</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">omask</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">49</span>	<span class="n">AUE_GETLOGIN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getlogin</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">namebuf</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">namelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">50</span>	<span class="n">AUE_SETLOGIN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setlogin</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">namebuf</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">51</span>	<span class="n">AUE_ACCT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">acct</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">52</span>	<span class="n">AUE_SIGPENDING</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigpending</span><span class="p">(</span><span class="n">struct</span> <span class="n">sigvec</span> <span class="o">*</span><span class="n">osv</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">53</span>	<span class="n">AUE_SIGALTSTACK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigaltstack</span><span class="p">(</span><span class="n">struct</span> <span class="n">sigaltstack</span> <span class="o">*</span><span class="n">nss</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sigaltstack</span> <span class="o">*</span><span class="n">oss</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span> <span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">54</span>	<span class="n">AUE_IOCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ioctl</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">com</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">data</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span>	<span class="n">AUE_REBOOT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">reboot</span><span class="p">(</span><span class="ne">int</span> <span class="n">opt</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">msg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">56</span>	<span class="n">AUE_REVOKE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">revoke</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">57</span>	<span class="n">AUE_SYMLINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">symlink</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">link</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">58</span>	<span class="n">AUE_READLINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">readlink</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="ne">int</span> <span class="n">count</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">59</span>	<span class="n">AUE_EXECVE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">execve</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">fname</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">argp</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">60</span>	<span class="n">AUE_UMASK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">umask</span><span class="p">(</span><span class="ne">int</span> <span class="n">newmask</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">61</span>	<span class="n">AUE_CHROOT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chroot</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">62</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">fstat</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">63</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">used</span> <span class="n">internally</span> <span class="ow">and</span> <span class="n">reserved</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">64</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getpagesize</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">65</span>	<span class="n">AUE_MSYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msync</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_VFORK</span>
</span></span><span class="line"><span class="cl"><span class="mi">66</span>	<span class="n">AUE_VFORK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">vfork</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">66</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vfork</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">67</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vread</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">68</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vwrite</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">69</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sbrk</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">70</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sstk</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">71</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">mmap</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">72</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vadvise</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">73</span>	<span class="n">AUE_MUNMAP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">munmap</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">74</span>	<span class="n">AUE_MPROTECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mprotect</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">prot</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">75</span>	<span class="n">AUE_MADVISE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">madvise</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">behav</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">76</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vhangup</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">77</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vlimit</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">78</span>	<span class="n">AUE_MINCORE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mincore</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">len</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">vec</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">79</span>	<span class="n">AUE_GETGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getgroups</span><span class="p">(</span><span class="n">u_int</span> <span class="n">gidsetsize</span><span class="p">,</span> <span class="n">gid_t</span> <span class="o">*</span><span class="n">gidset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">80</span>	<span class="n">AUE_SETGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setgroups</span><span class="p">(</span><span class="n">u_int</span> <span class="n">gidsetsize</span><span class="p">,</span> <span class="n">gid_t</span> <span class="o">*</span><span class="n">gidset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">81</span>	<span class="n">AUE_GETPGRP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getpgrp</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">82</span>	<span class="n">AUE_SETPGRP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setpgid</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">pgid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">83</span>	<span class="n">AUE_SETITIMER</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setitimer</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="n">struct</span> <span class="n">itimerval</span> <span class="o">*</span><span class="n">itv</span><span class="p">,</span> <span class="n">struct</span> <span class="n">itimerval</span> <span class="o">*</span><span class="n">oitv</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">84</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">wait</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">85</span>	<span class="n">AUE_SWAPON</span> 	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">swapon</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">86</span>	<span class="n">AUE_GETITIMER</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getitimer</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="n">struct</span> <span class="n">itimerval</span> <span class="o">*</span><span class="n">itv</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">87</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">gethostname</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">88</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sethostname</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">89</span>	<span class="n">AUE_GETDTABLESIZE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_getdtablesize</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">90</span>	<span class="n">AUE_DUP2</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_dup2</span><span class="p">(</span><span class="n">u_int</span> <span class="n">from</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">to</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">91</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getdopt</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">92</span>	<span class="n">AUE_FCNTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fcntl</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">long</span> <span class="n">arg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">93</span>	<span class="n">AUE_SELECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">select</span><span class="p">(</span><span class="ne">int</span> <span class="n">nd</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="ow">in</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ou</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ex</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">94</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">setdopt</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">95</span>	<span class="n">AUE_FSYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fsync</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">96</span>	<span class="n">AUE_SETPRIORITY</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setpriority</span><span class="p">(</span><span class="ne">int</span> <span class="n">which</span><span class="p">,</span> <span class="n">id_t</span> <span class="n">who</span><span class="p">,</span> <span class="ne">int</span> <span class="n">prio</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">97</span>	<span class="n">AUE_SOCKET</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">socket</span><span class="p">(</span><span class="ne">int</span> <span class="n">domain</span><span class="p">,</span> <span class="ne">int</span> <span class="n">type</span><span class="p">,</span> <span class="ne">int</span> <span class="n">protocol</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">98</span>	<span class="n">AUE_CONNECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">connect</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">name</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">namelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">97</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">98</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">99</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">accept</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">100</span>	<span class="n">AUE_GETPRIORITY</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getpriority</span><span class="p">(</span><span class="ne">int</span> <span class="n">which</span><span class="p">,</span> <span class="n">id_t</span> <span class="n">who</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">101</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">send</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">102</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">recv</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">103</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sigreturn</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">104</span>	<span class="n">AUE_BIND</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">bind</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">name</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">namelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">105</span>	<span class="n">AUE_SETSOCKOPT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setsockopt</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="ne">int</span> <span class="n">level</span><span class="p">,</span> <span class="ne">int</span> <span class="n">name</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">val</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">valsize</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">106</span>	<span class="n">AUE_LISTEN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">listen</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="ne">int</span> <span class="n">backlog</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">104</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">105</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">106</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">107</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vtimes</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">108</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sigvec</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">109</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sigblock</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">110</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sigsetmask</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">111</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigsuspend</span><span class="p">(</span><span class="n">sigset_t</span> <span class="n">mask</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">112</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sigstack</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">113</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">recvmsg</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">114</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sendmsg</span> <span class="p">}</span>	
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">113</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">114</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">115</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">vtrace</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">116</span>	<span class="n">AUE_GETTIMEOFDAY</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">gettimeofday</span><span class="p">(</span><span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tp</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timezone</span> <span class="o">*</span><span class="n">tzp</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="o">*</span><span class="n">mach_absolute_time</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">117</span>	<span class="n">AUE_GETRUSAGE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getrusage</span><span class="p">(</span><span class="ne">int</span> <span class="n">who</span><span class="p">,</span> <span class="n">struct</span> <span class="n">rusage</span> <span class="o">*</span><span class="n">rusage</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">118</span>	<span class="n">AUE_GETSOCKOPT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getsockopt</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="ne">int</span> <span class="n">level</span><span class="p">,</span> <span class="ne">int</span> <span class="n">name</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">val</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="o">*</span><span class="n">avalsize</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">118</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">119</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">resuba</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">120</span>	<span class="n">AUE_READV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">readv</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">iovcnt</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">121</span>	<span class="n">AUE_WRITEV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">writev</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">iovcnt</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">122</span>	<span class="n">AUE_SETTIMEOFDAY</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">settimeofday</span><span class="p">(</span><span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timezone</span> <span class="o">*</span><span class="n">tzp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">123</span>	<span class="n">AUE_FCHOWN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchown</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">uid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">gid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">124</span>	<span class="n">AUE_FCHMOD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchmod</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">125</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">recvfrom</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">126</span>	<span class="n">AUE_SETREUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setreuid</span><span class="p">(</span><span class="n">uid_t</span> <span class="n">ruid</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">euid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">127</span>	<span class="n">AUE_SETREGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setregid</span><span class="p">(</span><span class="n">gid_t</span> <span class="n">rgid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">egid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">128</span>	<span class="n">AUE_RENAME</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">rename</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">to</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">129</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">truncate</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">130</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">ftruncate</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">131</span>	<span class="n">AUE_FLOCK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_flock</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">how</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">132</span>	<span class="n">AUE_MKFIFO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mkfifo</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">133</span>	<span class="n">AUE_SENDTO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sendto</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">to</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">tolen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">134</span>	<span class="n">AUE_SHUTDOWN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shutdown</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="ne">int</span> <span class="n">how</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">135</span>	<span class="n">AUE_SOCKETPAIR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">socketpair</span><span class="p">(</span><span class="ne">int</span> <span class="n">domain</span><span class="p">,</span> <span class="ne">int</span> <span class="n">type</span><span class="p">,</span> <span class="ne">int</span> <span class="n">protocol</span><span class="p">,</span> <span class="ne">int</span> <span class="o">*</span><span class="n">rsv</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">133</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">134</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">135</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">136</span>	<span class="n">AUE_MKDIR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mkdir</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">137</span>	<span class="n">AUE_RMDIR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">rmdir</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">138</span>	<span class="n">AUE_UTIMES</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">utimes</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tptr</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">139</span>	<span class="n">AUE_FUTIMES</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">futimes</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tptr</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">140</span>	<span class="n">AUE_ADJTIME</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">adjtime</span><span class="p">(</span><span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">delta</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">olddelta</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">141</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getpeername</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">142</span>	<span class="n">AUE_SYSCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">gethostuuid</span><span class="p">(</span><span class="n">unsigned</span> <span class="n">char</span> <span class="o">*</span><span class="n">uuid_buf</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">timeoutp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">143</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">sethostid</span> 	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">144</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getrlimit</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">145</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">setrlimit</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">146</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">killpg</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">147</span>	<span class="n">AUE_SETSID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setsid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">148</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">setquota</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">149</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">qquota</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">150</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getsockname</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">151</span>	<span class="n">AUE_GETPGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getpgid</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">152</span>	<span class="n">AUE_SETPRIVEXEC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setprivexec</span><span class="p">(</span><span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">153</span>	<span class="n">AUE_PREAD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">pread</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">154</span>	<span class="n">AUE_PWRITE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">pwrite</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#if NFSSERVER	/* XXX */</span>
</span></span><span class="line"><span class="cl"><span class="mi">155</span>	<span class="n">AUE_NFS_SVC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nfssvc</span><span class="p">(</span><span class="ne">int</span> <span class="n">flag</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">argp</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">155</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">156</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getdirentries</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">157</span>	<span class="n">AUE_STATFS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">statfs</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">statfs</span> <span class="o">*</span><span class="n">buf</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">158</span>	<span class="n">AUE_FSTATFS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fstatfs</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">statfs</span> <span class="o">*</span><span class="n">buf</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">159</span>	<span class="n">AUE_UNMOUNT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">unmount</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">160</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">async_daemon</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#if NFSSERVER	/* XXX */</span>
</span></span><span class="line"><span class="cl"><span class="mi">161</span>	<span class="n">AUE_NFS_GETFH</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getfh</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">fname</span><span class="p">,</span> <span class="n">fhandle_t</span> <span class="o">*</span><span class="n">fhp</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">161</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">162</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getdomainname</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">163</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">setdomainname</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">164</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">165</span>	<span class="n">AUE_QUOTACTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">quotactl</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">uid</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">arg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">166</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">exportfs</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">167</span>	<span class="n">AUE_MOUNT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mount</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">data</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">168</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">ustat</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">169</span>	<span class="n">AUE_CSOPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">csops</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ops</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">useraddr</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">usersize</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">170</span>	<span class="n">AUE_CSOPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">csops_audittoken</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ops</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">useraddr</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">usersize</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">uaudittoken</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">171</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">wait3</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">172</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">rpause</span>	<span class="p">}</span>	
</span></span><span class="line"><span class="cl"><span class="mi">173</span>	<span class="n">AUE_WAITID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">waitid</span><span class="p">(</span><span class="n">idtype_t</span> <span class="n">idtype</span><span class="p">,</span> <span class="n">id_t</span> <span class="n">id</span><span class="p">,</span> <span class="n">siginfo_t</span> <span class="o">*</span><span class="n">infop</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">174</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">getdents</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">175</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">gc_control</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">176</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">add_profil</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">177</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kdebug_typefilter</span><span class="p">(</span><span class="n">void</span><span class="o">**</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span><span class="o">*</span> <span class="n">size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">178</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">kdebug_trace_string</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">debugid</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">str_id</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="nb">str</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">179</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="ne">int</span> <span class="n">kdebug_trace64</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">code</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg1</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg2</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg3</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg4</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">180</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="ne">int</span> <span class="n">kdebug_trace</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">code</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">arg1</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">arg2</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">arg3</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">arg4</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">181</span>	<span class="n">AUE_SETGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setgid</span><span class="p">(</span><span class="n">gid_t</span> <span class="n">gid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">182</span>	<span class="n">AUE_SETEGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setegid</span><span class="p">(</span><span class="n">gid_t</span> <span class="n">egid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">183</span>	<span class="n">AUE_SETEUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">seteuid</span><span class="p">(</span><span class="n">uid_t</span> <span class="n">euid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">184</span>	<span class="n">AUE_SIGRETURN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigreturn</span><span class="p">(</span><span class="n">struct</span> <span class="n">ucontext</span> <span class="o">*</span><span class="n">uctx</span><span class="p">,</span> <span class="ne">int</span> <span class="n">infostyle</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">token</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">185</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">chud</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">186</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">thread_selfcounts</span><span class="p">(</span><span class="ne">int</span> <span class="n">type</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbytes</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">187</span>	<span class="n">AUE_FDATASYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fdatasync</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">188</span>	<span class="n">AUE_STAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">stat</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">189</span>	<span class="n">AUE_FSTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fstat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">190</span>	<span class="n">AUE_LSTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lstat</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">191</span>	<span class="n">AUE_PATHCONF</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pathconf</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">name</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">192</span>	<span class="n">AUE_FPATHCONF</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fpathconf</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">name</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">193</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">getfsstat</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">194</span>	<span class="n">AUE_GETRLIMIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getrlimit</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="n">struct</span> <span class="n">rlimit</span> <span class="o">*</span><span class="n">rlp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">195</span>	<span class="n">AUE_SETRLIMIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setrlimit</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="n">struct</span> <span class="n">rlimit</span> <span class="o">*</span><span class="n">rlp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">196</span>	<span class="n">AUE_GETDIRENTRIES</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getdirentries</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">count</span><span class="p">,</span> <span class="n">long</span> <span class="o">*</span><span class="n">basep</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">197</span>	<span class="n">AUE_MMAP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_addr_t</span> <span class="n">mmap</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">prot</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">pos</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">198</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 	<span class="p">{</span> <span class="n">old</span> <span class="n">__syscall</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">199</span>	<span class="n">AUE_LSEEK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">off_t</span> <span class="n">lseek</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">,</span> <span class="ne">int</span> <span class="n">whence</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">200</span>	<span class="n">AUE_TRUNCATE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">truncate</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">201</span>	<span class="n">AUE_FTRUNCATE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ftruncate</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">202</span>	<span class="n">AUE_SYSCTL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="ne">int</span> <span class="n">sysctl</span><span class="p">(</span><span class="ne">int</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">namelen</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">old</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">oldlenp</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">new</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">newlen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">203</span>	<span class="n">AUE_MLOCK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mlock</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">204</span>	<span class="n">AUE_MUNLOCK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">munlock</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">205</span>	<span class="n">AUE_UNDELETE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">undelete</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">206</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATsocket</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">207</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATgetmsg</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">208</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATputmsg</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">209</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATsndreq</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">210</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATsndrsp</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">211</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATgetreq</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">212</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">ATgetrsp</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">213</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 	<span class="p">{</span> <span class="n">Reserved</span> <span class="k">for</span> <span class="n">AppleTalk</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">214</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">215</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="n">System</span> <span class="n">Calls</span> <span class="mi">216</span> <span class="o">-</span> <span class="mi">230</span> <span class="n">are</span> <span class="n">reserved</span> <span class="k">for</span> <span class="n">calls</span> <span class="n">to</span> <span class="n">support</span> <span class="n">HFS</span><span class="o">/</span><span class="n">HFS</span> <span class="n">Plus</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="n">file</span> <span class="n">system</span> <span class="n">semantics</span><span class="o">.</span> <span class="n">Currently</span><span class="p">,</span> <span class="n">we</span> <span class="n">only</span> <span class="n">use</span> <span class="mi">215</span><span class="o">-</span><span class="mf">227.</span>  <span class="n">The</span> <span class="n">rest</span> <span class="n">is</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="k">for</span> <span class="n">future</span> <span class="n">expansion</span> <span class="ow">in</span> <span class="n">anticipation</span> <span class="n">of</span> <span class="n">new</span> <span class="n">MacOS</span> <span class="n">APIs</span> <span class="k">for</span> <span class="n">HFS</span> <span class="n">Plus</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="n">These</span> <span class="n">calls</span> <span class="n">are</span> <span class="ow">not</span> <span class="n">conditionalized</span> <span class="n">because</span> <span class="k">while</span> <span class="n">they</span> <span class="n">are</span> <span class="n">specific</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="n">to</span> <span class="n">HFS</span> <span class="n">semantics</span><span class="p">,</span> <span class="n">they</span> <span class="n">are</span> <span class="ow">not</span> <span class="n">specific</span> <span class="n">to</span> <span class="n">the</span> <span class="n">HFS</span> <span class="n">filesystem</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="n">We</span> <span class="n">expect</span> <span class="n">all</span> <span class="n">filesystems</span> <span class="n">to</span> <span class="n">recognize</span> <span class="n">the</span> <span class="n">call</span> <span class="ow">and</span> <span class="n">report</span> <span class="n">that</span> <span class="n">it</span> <span class="n">is</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="ow">not</span> <span class="n">supported</span> <span class="ow">or</span> <span class="n">to</span> <span class="n">actually</span> <span class="n">implement</span> <span class="n">it</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">;</span> <span class="mi">216</span><span class="o">-&gt;</span> <span class="mi">219</span> <span class="n">used</span> <span class="n">to</span> <span class="n">be</span> <span class="n">mkcomplex</span> <span class="ow">and</span> <span class="p">{</span><span class="n">f</span><span class="p">,</span><span class="n">l</span><span class="p">}</span><span class="n">statv</span> <span class="n">variants</span><span class="o">.</span> <span class="n">They</span> <span class="n">are</span> <span class="n">gone</span> <span class="n">now</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="mi">216</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">open_dprotected_np</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="k">class</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dpflags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">217</span>	<span class="n">AUE_FSGETPATH_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">fsgetpath_ext</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">fsid</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">objid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">218</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">lstatv</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">219</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">fstatv</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">220</span>	<span class="n">AUE_GETATTRLIST</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getattrlist</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">221</span>	<span class="n">AUE_SETATTRLIST</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setattrlist</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">222</span>	<span class="n">AUE_GETDIRENTRIESATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getdirentriesattr</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">buffersize</span><span class="p">,</span> <span class="n">u_long</span> <span class="o">*</span><span class="n">count</span><span class="p">,</span> <span class="n">u_long</span> <span class="o">*</span><span class="n">basep</span><span class="p">,</span> <span class="n">u_long</span> <span class="o">*</span><span class="n">newstate</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">223</span>	<span class="n">AUE_EXCHANGEDATA</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">exchangedata</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path1</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path2</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">224</span>	<span class="n">AUE_NULL</span>		<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">checkuseraccess</span> <span class="ow">or</span> <span class="n">fsgetpath</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">225</span>	<span class="n">AUE_SEARCHFS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">searchfs</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">fssearchblock</span> <span class="o">*</span><span class="n">searchblock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="o">*</span><span class="n">nummatches</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">scriptcode</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">options</span><span class="p">,</span> <span class="n">struct</span> <span class="n">searchstate</span> <span class="o">*</span><span class="n">state</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">226</span>	<span class="n">AUE_DELETE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">delete</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>       <span class="p">{</span> <span class="n">private</span> <span class="n">delete</span> <span class="p">(</span><span class="n">Carbon</span> <span class="n">semantics</span><span class="p">)</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">227</span>	<span class="n">AUE_COPYFILE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">copyfile</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">to</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">228</span>	<span class="n">AUE_FGETATTRLIST</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fgetattrlist</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">229</span>	<span class="n">AUE_FSETATTRLIST</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fsetattrlist</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">230</span>	<span class="n">AUE_POLL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">poll</span><span class="p">(</span><span class="n">struct</span> <span class="n">pollfd</span> <span class="o">*</span><span class="n">fds</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">nfds</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">231</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">watchevent</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">232</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">waitevent</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">233</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">modwatch</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">234</span>	<span class="n">AUE_GETXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">getxattr</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">position</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">235</span>	<span class="n">AUE_FGETXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">fgetxattr</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">position</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">236</span>	<span class="n">AUE_SETXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setxattr</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">position</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">237</span>	<span class="n">AUE_FSETXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fsetxattr</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">position</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">238</span>	<span class="n">AUE_REMOVEXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">removexattr</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">239</span>	<span class="n">AUE_FREMOVEXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fremovexattr</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrname</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">240</span>	<span class="n">AUE_LISTXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">listxattr</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">namebuf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">241</span>	<span class="n">AUE_FLISTXATTR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">flistxattr</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">namebuf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">242</span>	<span class="n">AUE_FSCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fsctl</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">data</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">243</span>	<span class="n">AUE_INITGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">initgroups</span><span class="p">(</span><span class="n">u_int</span> <span class="n">gidsetsize</span><span class="p">,</span> <span class="n">gid_t</span> <span class="o">*</span><span class="n">gidset</span><span class="p">,</span> <span class="ne">int</span> <span class="n">gmuid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">244</span>	<span class="n">AUE_POSIX_SPAWN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">posix_spawn</span><span class="p">(</span><span class="n">pid_t</span> <span class="o">*</span><span class="n">pid</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">_posix_spawn_args_desc</span> <span class="o">*</span><span class="n">adesc</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">245</span>	<span class="n">AUE_FFSCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ffsctl</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">data</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">246</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#if NFSCLIENT	/* XXX */</span>
</span></span><span class="line"><span class="cl"><span class="mi">247</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nfsclnt</span><span class="p">(</span><span class="ne">int</span> <span class="n">flag</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">argp</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">247</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if NFSSERVER	/* XXX */</span>
</span></span><span class="line"><span class="cl"><span class="mi">248</span>	<span class="n">AUE_FHOPEN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fhopen</span><span class="p">(</span><span class="k">const</span> <span class="n">struct</span> <span class="n">fhandle</span> <span class="o">*</span><span class="n">u_fhp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">248</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> 
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">249</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">250</span>	<span class="n">AUE_MINHERIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">minherit</span><span class="p">(</span><span class="n">void</span> <span class="o">*</span><span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">inherit</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_SEM</span>
</span></span><span class="line"><span class="cl"><span class="mi">251</span>	<span class="n">AUE_SEMSYS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">semsys</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a2</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a3</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a4</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a5</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">251</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_MSG</span>
</span></span><span class="line"><span class="cl"><span class="mi">252</span>	<span class="n">AUE_MSGSYS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msgsys</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a2</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a3</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a4</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a5</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">252</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_SHM</span>
</span></span><span class="line"><span class="cl"><span class="mi">253</span>	<span class="n">AUE_SHMSYS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shmsys</span><span class="p">(</span><span class="n">u_int</span> <span class="n">which</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a2</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a3</span><span class="p">,</span> <span class="ne">int</span> <span class="n">a4</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">253</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_SEM</span>
</span></span><span class="line"><span class="cl"><span class="mi">254</span>	<span class="n">AUE_SEMCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">semctl</span><span class="p">(</span><span class="ne">int</span> <span class="n">semid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">semnum</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">semun_t</span> <span class="n">arg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">255</span>	<span class="n">AUE_SEMGET</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">semget</span><span class="p">(</span><span class="n">key_t</span> <span class="n">key</span><span class="p">,</span> <span class="ne">int</span>	<span class="n">nsems</span><span class="p">,</span> <span class="ne">int</span> <span class="n">semflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">256</span>	<span class="n">AUE_SEMOP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">semop</span><span class="p">(</span><span class="ne">int</span> <span class="n">semid</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sembuf</span> <span class="o">*</span><span class="n">sops</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nsops</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">257</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">semconfig</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">254</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">255</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">256</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">257</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_MSG</span>
</span></span><span class="line"><span class="cl"><span class="mi">258</span>	<span class="n">AUE_MSGCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msgctl</span><span class="p">(</span><span class="ne">int</span> <span class="n">msqid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">struct</span>	<span class="n">msqid_ds</span> <span class="o">*</span><span class="n">buf</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">259</span>	<span class="n">AUE_MSGGET</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msgget</span><span class="p">(</span><span class="n">key_t</span> <span class="n">key</span><span class="p">,</span> <span class="ne">int</span> <span class="n">msgflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">260</span>	<span class="n">AUE_MSGSND</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msgsnd</span><span class="p">(</span><span class="ne">int</span> <span class="n">msqid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">msgsz</span><span class="p">,</span> <span class="ne">int</span> <span class="n">msgflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">261</span>	<span class="n">AUE_MSGRCV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">msgrcv</span><span class="p">(</span><span class="ne">int</span> <span class="n">msqid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">msgsz</span><span class="p">,</span> <span class="n">long</span> <span class="n">msgtyp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">msgflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">258</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">259</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">260</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">261</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_SHM</span>
</span></span><span class="line"><span class="cl"><span class="mi">262</span>	<span class="n">AUE_SHMAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_addr_t</span> <span class="n">shmat</span><span class="p">(</span><span class="ne">int</span> <span class="n">shmid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">shmaddr</span><span class="p">,</span> <span class="ne">int</span> <span class="n">shmflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">263</span>	<span class="n">AUE_SHMCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shmctl</span><span class="p">(</span><span class="ne">int</span> <span class="n">shmid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">shmid_ds</span> <span class="o">*</span><span class="n">buf</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">264</span>	<span class="n">AUE_SHMDT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shmdt</span><span class="p">(</span><span class="n">void</span> <span class="o">*</span><span class="n">shmaddr</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">265</span>	<span class="n">AUE_SHMGET</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shmget</span><span class="p">(</span><span class="n">key_t</span> <span class="n">key</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="ne">int</span> <span class="n">shmflg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">262</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">263</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">264</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">265</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">266</span>	<span class="n">AUE_SHMOPEN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shm_open</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="ne">int</span> <span class="n">oflag</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">267</span>	<span class="n">AUE_SHMUNLINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shm_unlink</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">268</span>	<span class="n">AUE_SEMOPEN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_addr_t</span> <span class="n">sem_open</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="ne">int</span> <span class="n">oflag</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="ne">int</span> <span class="n">value</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">269</span>	<span class="n">AUE_SEMCLOSE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_close</span><span class="p">(</span><span class="n">sem_t</span> <span class="o">*</span><span class="n">sem</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">270</span>	<span class="n">AUE_SEMUNLINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_unlink</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">name</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">271</span>	<span class="n">AUE_SEMWAIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_wait</span><span class="p">(</span><span class="n">sem_t</span> <span class="o">*</span><span class="n">sem</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">272</span>	<span class="n">AUE_SEMTRYWAIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_trywait</span><span class="p">(</span><span class="n">sem_t</span> <span class="o">*</span><span class="n">sem</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">273</span>	<span class="n">AUE_SEMPOST</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_post</span><span class="p">(</span><span class="n">sem_t</span> <span class="o">*</span><span class="n">sem</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">274</span>	<span class="n">AUE_SYSCTL</span>	<span class="n">ALL</span> 	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_sysctlbyname</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">namelen</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">old</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">oldlenp</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">new</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">newlen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">275</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">sem_init</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">276</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">sem_destroy</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">277</span>	<span class="n">AUE_OPEN_EXTENDED_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">open_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">278</span>	<span class="n">AUE_UMASK_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">umask_extended</span><span class="p">(</span><span class="ne">int</span> <span class="n">newmask</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">279</span>	<span class="n">AUE_STAT_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">stat_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">280</span>	<span class="n">AUE_LSTAT_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lstat_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">281</span>	<span class="n">AUE_FSTAT_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fstat_extended</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">282</span>	<span class="n">AUE_CHMOD_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">chmod_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">283</span>	<span class="n">AUE_FCHMOD_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchmod_extended</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">284</span>	<span class="n">AUE_ACCESS_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">access_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">entries</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">results</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">285</span>	<span class="n">AUE_SETTID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">settid</span><span class="p">(</span><span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">286</span>	<span class="n">AUE_GETTID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">gettid</span><span class="p">(</span><span class="n">uid_t</span> <span class="o">*</span><span class="n">uidp</span><span class="p">,</span> <span class="n">gid_t</span> <span class="o">*</span><span class="n">gidp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">287</span>	<span class="n">AUE_SETSGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setsgroups</span><span class="p">(</span><span class="ne">int</span> <span class="n">setlen</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">guidset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">288</span>	<span class="n">AUE_GETSGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getsgroups</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">setlen</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">guidset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">289</span>	<span class="n">AUE_SETWGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setwgroups</span><span class="p">(</span><span class="ne">int</span> <span class="n">setlen</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">guidset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">290</span>	<span class="n">AUE_GETWGROUPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getwgroups</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">setlen</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">guidset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">291</span>	<span class="n">AUE_MKFIFO_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mkfifo_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">292</span>	<span class="n">AUE_MKDIR_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mkdir_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_EXT_RESOLVER</span>
</span></span><span class="line"><span class="cl"><span class="mi">293</span>	<span class="n">AUE_IDENTITYSVC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">identitysvc</span><span class="p">(</span><span class="ne">int</span> <span class="n">opcode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">message</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">293</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">294</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shared_region_check_np</span><span class="p">(</span><span class="n">uint64_t</span> <span class="o">*</span><span class="n">start_address</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">295</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">shared_region_map_np</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">296</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">vm_pressure_monitor</span><span class="p">(</span><span class="ne">int</span> <span class="n">wait_for_pressure</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nsecs_monitored</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="o">*</span><span class="n">pages_reclaimed</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if PSYNCH</span>
</span></span><span class="line"><span class="cl"><span class="mi">297</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_longrdlock</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">298</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_yieldwrlock</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">299</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">psynch_rw_downgrade</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">300</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_upgrade</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">301</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_mutexwait</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">mutex</span><span class="p">,</span>  <span class="n">uint32_t</span> <span class="n">mgen</span><span class="p">,</span> <span class="n">uint32_t</span>  <span class="n">ugen</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">tid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">302</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_mutexdrop</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">mutex</span><span class="p">,</span>  <span class="n">uint32_t</span> <span class="n">mgen</span><span class="p">,</span> <span class="n">uint32_t</span>  <span class="n">ugen</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">tid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">303</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_cvbroad</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cv</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">cvlsgen</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">cvudgen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">mutex</span><span class="p">,</span>  <span class="n">uint64_t</span> <span class="n">mugen</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">tid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">304</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_cvsignal</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cv</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">cvlsgen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cvugen</span><span class="p">,</span> <span class="ne">int</span> <span class="n">thread_port</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">mutex</span><span class="p">,</span>  <span class="n">uint64_t</span> <span class="n">mugen</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">tid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">305</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_cvwait</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cv</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">cvlsgen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cvugen</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">mutex</span><span class="p">,</span>  <span class="n">uint64_t</span> <span class="n">mugen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">int64_t</span> <span class="n">sec</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">nsec</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">306</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_rdlock</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">307</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_wrlock</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">308</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_unlock</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">309</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint32_t</span> <span class="n">psynch_rw_unlock2</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">rwlock</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">lgenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">ugenval</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">rw_wc</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span>  <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">297</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">reset_shared_file</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">298</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">new_system_shared_regions</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">299</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">shared_region_map_file_np</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">300</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">shared_region_make_private_np</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">301</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">302</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">303</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">304</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">305</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">306</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">307</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">308</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">309</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">310</span>	<span class="n">AUE_GETSID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getsid</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">311</span>	<span class="n">AUE_SETTIDWITHPID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">settid_with_pid</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">assume</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if PSYNCH</span>
</span></span><span class="line"><span class="cl"><span class="mi">312</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">psynch_cvclrprepost</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cv</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cvgen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cvugen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cvsgen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">prepocnt</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">preposeq</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">312</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">__pthread_cond_timedwait</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">313</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_fsync</span><span class="p">(</span><span class="ne">int</span> <span class="n">op</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">314</span> 	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">aio_return</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">315</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_suspend</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocblist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nent</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">timeoutp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">316</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_cancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">317</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_error</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">318</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_read</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">319</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_write</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocbp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">320</span>	<span class="n">AUE_LIOLISTIO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lio_listio</span><span class="p">(</span><span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">aiocblist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nent</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">sigp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">321</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">__pthread_cond_wait</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">322</span>	<span class="n">AUE_IOPOLICYSYS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">iopolicysys</span><span class="p">(</span><span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">arg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">323</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">process_policy</span><span class="p">(</span><span class="ne">int</span> <span class="n">scope</span><span class="p">,</span> <span class="ne">int</span> <span class="n">action</span><span class="p">,</span> <span class="ne">int</span> <span class="n">policy</span><span class="p">,</span> <span class="ne">int</span> <span class="n">policy_subtype</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">attrp</span><span class="p">,</span> <span class="n">pid_t</span> <span class="n">target_pid</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">target_threadid</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">324</span>	<span class="n">AUE_MLOCKALL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mlockall</span><span class="p">(</span><span class="ne">int</span> <span class="n">how</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">325</span>	<span class="n">AUE_MUNLOCKALL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">munlockall</span><span class="p">(</span><span class="ne">int</span> <span class="n">how</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">326</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">327</span>	<span class="n">AUE_ISSETUGID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">issetugid</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">328</span>	<span class="n">AUE_PTHREADKILL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_kill</span><span class="p">(</span><span class="ne">int</span> <span class="n">thread_port</span><span class="p">,</span> <span class="ne">int</span> <span class="n">sig</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">329</span>	<span class="n">AUE_PTHREADSIGMASK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_sigmask</span><span class="p">(</span><span class="ne">int</span> <span class="n">how</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">set</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">oset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">330</span>	<span class="n">AUE_SIGWAIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__sigwait</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">set</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">sig</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">331</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__disable_threadsignal</span><span class="p">(</span><span class="ne">int</span> <span class="n">value</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">332</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_markcancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">thread_port</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">333</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_canceled</span><span class="p">(</span><span class="ne">int</span>  <span class="n">action</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#if OLD_SEMWAIT_SIGNAL</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="mi">334</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">__semwait_signal</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">334</span>     <span class="n">AUE_SEMWAITSIGNAL</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">__semwait_signal</span><span class="p">(</span><span class="ne">int</span> <span class="n">cond_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mutex_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">,</span> <span class="ne">int</span> <span class="n">relative</span><span class="p">,</span> <span class="n">int64_t</span> <span class="n">tv_sec</span><span class="p">,</span> <span class="n">int32_t</span> <span class="n">tv_nsec</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">335</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">utrace</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">336</span>	<span class="n">AUE_PROCINFO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">proc_info</span><span class="p">(</span><span class="n">int32_t</span> <span class="n">callnum</span><span class="p">,</span><span class="n">int32_t</span> <span class="n">pid</span><span class="p">,</span><span class="n">uint32_t</span> <span class="n">flavor</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg</span><span class="p">,</span><span class="n">user_addr_t</span> <span class="n">buffer</span><span class="p">,</span><span class="n">int32_t</span> <span class="n">buffersize</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SENDFILE</span>
</span></span><span class="line"><span class="cl"><span class="mi">337</span>	<span class="n">AUE_SENDFILE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sendfile</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">,</span> <span class="n">off_t</span> <span class="o">*</span><span class="n">nbytes</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sf_hdtr</span> <span class="o">*</span><span class="n">hdtr</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else /* !SENDFILE */</span>
</span></span><span class="line"><span class="cl"><span class="mi">337</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SENDFILE */</span>
</span></span><span class="line"><span class="cl"><span class="mi">338</span>	<span class="n">AUE_STAT64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">stat64</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">339</span>	<span class="n">AUE_FSTAT64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fstat64</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">340</span>	<span class="n">AUE_LSTAT64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lstat64</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">341</span>	<span class="n">AUE_STAT64_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">stat64_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">342</span>	<span class="n">AUE_LSTAT64_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lstat64_extended</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">343</span>	<span class="n">AUE_FSTAT64_EXTENDED</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fstat64_extended</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">xsecurity_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">344</span>	<span class="n">AUE_GETDIRENTRIES64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">getdirentries64</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="n">off_t</span> <span class="o">*</span><span class="n">position</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">345</span>	<span class="n">AUE_STATFS64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">statfs64</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">statfs64</span> <span class="o">*</span><span class="n">buf</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">346</span>	<span class="n">AUE_FSTATFS64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fstatfs64</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">statfs64</span> <span class="o">*</span><span class="n">buf</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">347</span>	<span class="n">AUE_GETFSSTAT64</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getfsstat64</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="ne">int</span> <span class="n">bufsize</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">348</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_chdir</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">349</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__pthread_fchdir</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">350</span>	<span class="n">AUE_AUDIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">audit</span><span class="p">(</span><span class="n">void</span> <span class="o">*</span><span class="n">record</span><span class="p">,</span> <span class="ne">int</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">351</span>	<span class="n">AUE_AUDITON</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">auditon</span><span class="p">(</span><span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="ne">int</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">352</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">353</span>	<span class="n">AUE_GETAUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getauid</span><span class="p">(</span><span class="n">au_id_t</span> <span class="o">*</span><span class="n">auid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">354</span>	<span class="n">AUE_SETAUID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setauid</span><span class="p">(</span><span class="n">au_id_t</span> <span class="o">*</span><span class="n">auid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">355</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">getaudit</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">356</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">setaudit</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">357</span>	<span class="n">AUE_GETAUDIT_ADDR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getaudit_addr</span><span class="p">(</span><span class="n">struct</span> <span class="n">auditinfo_addr</span> <span class="o">*</span><span class="n">auditinfo_addr</span><span class="p">,</span> <span class="ne">int</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">358</span>	<span class="n">AUE_SETAUDIT_ADDR</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setaudit_addr</span><span class="p">(</span><span class="n">struct</span> <span class="n">auditinfo_addr</span> <span class="o">*</span><span class="n">auditinfo_addr</span><span class="p">,</span> <span class="ne">int</span> <span class="n">length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">359</span>	<span class="n">AUE_AUDITCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">auditctl</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_WORKQUEUE</span>
</span></span><span class="line"><span class="cl"><span class="mi">360</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_addr_t</span> <span class="n">bsdthread_create</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="k">func</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">func_arg</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">stack</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">pthread</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">361</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">bsdthread_terminate</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">stackaddr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">freesize</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">port</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">sem</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">360</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">361</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* CONFIG_WORKQUEUE */</span>
</span></span><span class="line"><span class="cl"><span class="mi">362</span>	<span class="n">AUE_KQUEUE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kqueue</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">363</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kevent</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">kevent</span> <span class="o">*</span><span class="n">changelist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nchanges</span><span class="p">,</span> <span class="n">struct</span> <span class="n">kevent</span> <span class="o">*</span><span class="n">eventlist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nevents</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">timeout</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">364</span>	<span class="n">AUE_LCHOWN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">lchown</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">owner</span><span class="p">,</span> <span class="n">gid_t</span> <span class="n">group</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">365</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>	<span class="p">{</span> <span class="n">old</span> <span class="n">stack_snapshot</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_WORKQUEUE</span>
</span></span><span class="line"><span class="cl"><span class="mi">366</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">bsdthread_register</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">threadstart</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">wqthread</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">stack_addr_hint</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">targetconc_ptr</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">dispatchqueue_offset</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">tsd_offset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">367</span>	<span class="n">AUE_WORKQOPEN</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">workq_open</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">368</span>	<span class="n">AUE_WORKQOPS</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">workq_kernreturn</span><span class="p">(</span><span class="ne">int</span> <span class="n">options</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">item</span><span class="p">,</span> <span class="ne">int</span> <span class="n">affinity</span><span class="p">,</span> <span class="ne">int</span> <span class="n">prio</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">366</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">367</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">368</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* CONFIG_WORKQUEUE */</span>
</span></span><span class="line"><span class="cl"><span class="mi">369</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kevent64</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">kevent64_s</span> <span class="o">*</span><span class="n">changelist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nchanges</span><span class="p">,</span> <span class="n">struct</span> <span class="n">kevent64_s</span> <span class="o">*</span><span class="n">eventlist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nevents</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">timeout</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if OLD_SEMWAIT_SIGNAL</span>
</span></span><span class="line"><span class="cl"><span class="mi">370</span>     <span class="n">AUE_SEMWAITSIGNAL</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">__old_semwait_signal</span><span class="p">(</span><span class="ne">int</span> <span class="n">cond_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mutex_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">,</span> <span class="ne">int</span> <span class="n">relative</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">ts</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">371</span>     <span class="n">AUE_SEMWAITSIGNAL</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">__old_semwait_signal_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">cond_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mutex_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">,</span> <span class="ne">int</span> <span class="n">relative</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">ts</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">370</span>     <span class="n">AUE_NULL</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">__semwait_signal</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">371</span>     <span class="n">AUE_NULL</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">__semwait_signal</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">372</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">thread_selfid</span> <span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">373</span>	<span class="n">AUE_LEDGER</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ledger</span><span class="p">(</span><span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">arg1</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">arg2</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">arg3</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">374</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kevent_qos</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">kevent_qos_s</span> <span class="o">*</span><span class="n">changelist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nchanges</span><span class="p">,</span> <span class="n">struct</span> <span class="n">kevent_qos_s</span> <span class="o">*</span><span class="n">eventlist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nevents</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">data_out</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">data_available</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">375</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kevent_id</span><span class="p">(</span><span class="n">uint64_t</span> <span class="n">id</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">kevent_qos_s</span> <span class="o">*</span><span class="n">changelist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nchanges</span><span class="p">,</span> <span class="n">struct</span> <span class="n">kevent_qos_s</span> <span class="o">*</span><span class="n">eventlist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nevents</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">data_out</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">data_available</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">376</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">377</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">378</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">379</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">380</span>	<span class="n">AUE_MAC_EXECVE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_execve</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">fname</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">argp</span><span class="p">,</span> <span class="n">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_MACF</span>
</span></span><span class="line"><span class="cl"><span class="mi">381</span>	<span class="n">AUE_MAC_SYSCALL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_syscall</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">policy</span><span class="p">,</span> <span class="ne">int</span> <span class="n">call</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">arg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">382</span>	<span class="n">AUE_MAC_GET_FILE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_file</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path_p</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">383</span>	<span class="n">AUE_MAC_SET_FILE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_set_file</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path_p</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">384</span>	<span class="n">AUE_MAC_GET_LINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_link</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path_p</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">385</span>	<span class="n">AUE_MAC_SET_LINK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_set_link</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path_p</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">386</span>	<span class="n">AUE_MAC_GET_PROC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_proc</span><span class="p">(</span><span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">387</span>	<span class="n">AUE_MAC_SET_PROC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_set_proc</span><span class="p">(</span><span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">388</span>	<span class="n">AUE_MAC_GET_FD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_fd</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">389</span>	<span class="n">AUE_MAC_SET_FD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_set_fd</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">390</span>	<span class="n">AUE_MAC_GET_PID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_pid</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">381</span>     <span class="n">AUE_MAC_SYSCALL</span> <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">382</span>     <span class="n">AUE_MAC_GET_FILE</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">383</span>     <span class="n">AUE_MAC_SET_FILE</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">384</span>     <span class="n">AUE_MAC_GET_LINK</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">385</span>     <span class="n">AUE_MAC_SET_LINK</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">386</span>     <span class="n">AUE_MAC_GET_PROC</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">387</span>     <span class="n">AUE_MAC_SET_PROC</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">388</span>     <span class="n">AUE_MAC_GET_FD</span>  <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">389</span>     <span class="n">AUE_MAC_SET_FD</span>  <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">390</span>     <span class="n">AUE_MAC_GET_PID</span> <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">391</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">392</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">393</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">394</span>	<span class="n">AUE_SELECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pselect</span><span class="p">(</span><span class="ne">int</span> <span class="n">nd</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="ow">in</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ou</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ex</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">ts</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">sigset_t</span> <span class="o">*</span><span class="n">mask</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">395</span>	<span class="n">AUE_SELECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pselect_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">nd</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="ow">in</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ou</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ex</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">timespec</span> <span class="o">*</span><span class="n">ts</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">sigset_t</span> <span class="o">*</span><span class="n">mask</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">396</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">read_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">cbuf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">397</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">write_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">cbuf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">398</span>	<span class="n">AUE_OPEN_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">open_nocancel</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">399</span>	<span class="n">AUE_CLOSE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_close_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">400</span>	<span class="n">AUE_WAIT4</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">wait4_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">status</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">rusage</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">401</span>	<span class="n">AUE_RECVMSG</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">recvmsg_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">struct</span> <span class="n">msghdr</span> <span class="o">*</span><span class="n">msg</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">402</span>	<span class="n">AUE_SENDMSG</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sendmsg_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">msg</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">403</span>	<span class="n">AUE_RECVFROM</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">recvfrom_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="ne">int</span> <span class="o">*</span><span class="n">fromlenaddr</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">404</span>	<span class="n">AUE_ACCEPT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">accept_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">name</span><span class="p">,</span> <span class="n">socklen_t</span>	<span class="o">*</span><span class="n">anamelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">401</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">402</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">403</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">404</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">405</span>	<span class="n">AUE_MSYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msync_nocancel</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">406</span>	<span class="n">AUE_FCNTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fcntl_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">long</span> <span class="n">arg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">407</span>	<span class="n">AUE_SELECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">select_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">nd</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="ow">in</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ou</span><span class="p">,</span> <span class="n">u_int32_t</span> <span class="o">*</span><span class="n">ex</span><span class="p">,</span> <span class="n">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">408</span>	<span class="n">AUE_FSYNC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fsync_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">409</span>	<span class="n">AUE_CONNECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">connect_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">name</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">namelen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">409</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">410</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sigsuspend_nocancel</span><span class="p">(</span><span class="n">sigset_t</span> <span class="n">mask</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">411</span>	<span class="n">AUE_READV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">readv_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">iovcnt</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">412</span>	<span class="n">AUE_WRITEV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">writev_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">iovcnt</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">413</span>	<span class="n">AUE_SENDTO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sendto_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">to</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">tolen</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">413</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">414</span>	<span class="n">AUE_PREAD</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">pread_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">415</span>	<span class="n">AUE_PWRITE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">pwrite_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">416</span>	<span class="n">AUE_WAITID</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">waitid_nocancel</span><span class="p">(</span><span class="n">idtype_t</span> <span class="n">idtype</span><span class="p">,</span> <span class="n">id_t</span> <span class="n">id</span><span class="p">,</span> <span class="n">siginfo_t</span> <span class="o">*</span><span class="n">infop</span><span class="p">,</span> <span class="ne">int</span> <span class="n">options</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">417</span>	<span class="n">AUE_POLL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">poll_nocancel</span><span class="p">(</span><span class="n">struct</span> <span class="n">pollfd</span> <span class="o">*</span><span class="n">fds</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">nfds</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SYSV_MSG</span>
</span></span><span class="line"><span class="cl"><span class="mi">418</span>	<span class="n">AUE_MSGSND</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">msgsnd_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">msqid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">msgsz</span><span class="p">,</span> <span class="ne">int</span> <span class="n">msgflg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">419</span>	<span class="n">AUE_MSGRCV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">msgrcv_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">msqid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">msgsz</span><span class="p">,</span> <span class="n">long</span> <span class="n">msgtyp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">msgflg</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">418</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">419</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">420</span>	<span class="n">AUE_SEMWAIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sem_wait_nocancel</span><span class="p">(</span><span class="n">sem_t</span> <span class="o">*</span><span class="n">sem</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">421</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">aio_suspend_nocancel</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">aiocblist</span><span class="p">,</span> <span class="ne">int</span> <span class="n">nent</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">timeoutp</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">422</span>	<span class="n">AUE_SIGWAIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__sigwait_nocancel</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">set</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">sig</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#if OLD_SEMWAIT_SIGNAL</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="mi">423</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>   <span class="p">{</span> <span class="n">old</span> <span class="n">__semwait_signal_nocancel</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">423</span>     <span class="n">AUE_SEMWAITSIGNAL</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">__semwait_signal_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">cond_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mutex_sem</span><span class="p">,</span> <span class="ne">int</span> <span class="n">timeout</span><span class="p">,</span> <span class="ne">int</span> <span class="n">relative</span><span class="p">,</span> <span class="n">int64_t</span> <span class="n">tv_sec</span><span class="p">,</span> <span class="n">int32_t</span> <span class="n">tv_nsec</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">424</span>	<span class="n">AUE_MAC_MOUNT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_mount</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">caddr_t</span> <span class="n">data</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_MACF</span>
</span></span><span class="line"><span class="cl"><span class="mi">425</span>	<span class="n">AUE_MAC_GET_MOUNT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_get_mount</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">mac</span> <span class="o">*</span><span class="n">mac_p</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">425</span>     <span class="n">AUE_MAC_GET_MOUNT</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">426</span>	<span class="n">AUE_MAC_GETFSSTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">__mac_getfsstat</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="ne">int</span> <span class="n">bufsize</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">mac</span><span class="p">,</span> <span class="ne">int</span> <span class="n">macsize</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">427</span>	<span class="n">AUE_FSGETPATH</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">fsgetpath</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">fsid</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">objid</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">private</span> <span class="n">fsgetpath</span> <span class="p">(</span><span class="ne">File</span> <span class="n">Manager</span> <span class="n">SPI</span><span class="p">)</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">428</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">mach_port_name_t</span> <span class="n">audit_session_self</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">429</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">audit_session_join</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">port</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">430</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fileport_makeport</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">portnamep</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">431</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sys_fileport_makefd</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">port</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">432</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">audit_session_port</span><span class="p">(</span><span class="n">au_asid_t</span> <span class="n">asid</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">portnamep</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">433</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pid_suspend</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">434</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pid_resume</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_EMBEDDED</span>
</span></span><span class="line"><span class="cl"><span class="mi">435</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pid_hibernate</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">435</span>     <span class="n">AUE_NULL</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">436</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">pid_shutdown_sockets</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">level</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">436</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">437</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span> <span class="p">{</span> <span class="n">old</span> <span class="n">shared_region_slide_np</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">438</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shared_region_map_and_slide_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">count</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">shared_file_mapping_np</span> <span class="o">*</span><span class="n">mappings</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">slide</span><span class="p">,</span> <span class="n">uint64_t</span><span class="o">*</span> <span class="n">slide_start</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">slide_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">439</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kas_info</span><span class="p">(</span><span class="ne">int</span> <span class="n">selector</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">value</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">size</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_MEMORYSTATUS</span>
</span></span><span class="line"><span class="cl"><span class="mi">440</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">memorystatus_control</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">command</span><span class="p">,</span> <span class="n">int32_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">buffersize</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">440</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">441</span>	<span class="n">AUE_OPEN_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">guarded_open_np</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">guardflags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">442</span>	<span class="n">AUE_CLOSE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">guarded_close_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">443</span>	<span class="n">AUE_KQUEUE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">guarded_kqueue_np</span><span class="p">(</span><span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">guardflags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">444</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">change_fdguard_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">guardflags</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">nguard</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">nguardflags</span><span class="p">,</span> <span class="ne">int</span> <span class="o">*</span><span class="n">fdflagsp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">445</span>	<span class="n">AUE_USRCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">usrctl</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">446</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">proc_rlimit_control</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flavor</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">arg</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">447</span>	<span class="n">AUE_CONNECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">connectx</span><span class="p">(</span><span class="ne">int</span> <span class="n">socket</span><span class="p">,</span> <span class="k">const</span> <span class="n">sa_endpoints_t</span> <span class="o">*</span><span class="n">endpoints</span><span class="p">,</span> <span class="n">sae_associd_t</span> <span class="n">associd</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iov</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">len</span><span class="p">,</span> <span class="n">sae_connid_t</span> <span class="o">*</span><span class="n">connid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">448</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">disconnectx</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">sae_associd_t</span> <span class="n">aid</span><span class="p">,</span> <span class="n">sae_connid_t</span> <span class="n">cid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">449</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">peeloff</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">sae_associd_t</span> <span class="n">aid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">450</span>	<span class="n">AUE_SOCKET</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">socket_delegate</span><span class="p">(</span><span class="ne">int</span> <span class="n">domain</span><span class="p">,</span> <span class="ne">int</span> <span class="n">type</span><span class="p">,</span> <span class="ne">int</span> <span class="n">protocol</span><span class="p">,</span> <span class="n">pid_t</span> <span class="n">epid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">447</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">448</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">449</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">450</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">451</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">telemetry</span><span class="p">(</span><span class="n">uint64_t</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">deadline</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">interval</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">leeway</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg4</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg5</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_PROC_UUID_POLICY</span>
</span></span><span class="line"><span class="cl"><span class="mi">452</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">proc_uuid_policy</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uuid_t</span> <span class="n">uuid</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">uuidlen</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">452</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_MEMORYSTATUS</span>
</span></span><span class="line"><span class="cl"><span class="mi">453</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">memorystatus_get_level</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">level</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">453</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">454</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">system_override</span><span class="p">(</span><span class="n">uint64_t</span> <span class="n">timeout</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">455</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">vfs_purge</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">456</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sfi_ctl</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">sfi_class</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">time</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="o">*</span><span class="n">out_time</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">457</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">sfi_pidctl</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">sfi_flags</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="o">*</span><span class="n">out_sfi_flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_COALITIONS</span>
</span></span><span class="line"><span class="cl"><span class="mi">458</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">coalition</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="o">*</span><span class="n">cid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">459</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">coalition_info</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">flavor</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="o">*</span><span class="n">cid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">bufsize</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">458</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">459</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* COALITIONS */</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if NECP</span>
</span></span><span class="line"><span class="cl"><span class="mi">460</span> <span class="n">AUE_NECP</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">necp_match_policy</span><span class="p">(</span><span class="n">uint8_t</span> <span class="o">*</span><span class="n">parameters</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">parameters_size</span><span class="p">,</span> <span class="n">struct</span> <span class="n">necp_aggregate_result</span> <span class="o">*</span><span class="n">returned_result</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">460</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* NECP */</span>
</span></span><span class="line"><span class="cl"><span class="mi">461</span>	<span class="n">AUE_GETATTRLISTBULK</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getattrlistbulk</span><span class="p">(</span><span class="ne">int</span> <span class="n">dirfd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">462</span>	<span class="n">AUE_CLONEFILEAT</span>	<span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">clonefileat</span><span class="p">(</span><span class="ne">int</span> <span class="n">src_dirfd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">src</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dst_dirfd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">dst</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">463</span>	<span class="n">AUE_OPENAT_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">openat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">464</span>	<span class="n">AUE_OPENAT_RWTC</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">openat_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">465</span>	<span class="n">AUE_RENAMEAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">renameat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fromfd</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="ne">int</span> <span class="n">tofd</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">to</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">466</span>	<span class="n">AUE_FACCESSAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">faccessat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">amode</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">467</span>	<span class="n">AUE_FCHMODAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchmodat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">468</span>	<span class="n">AUE_FCHOWNAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fchownat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid_t</span> <span class="n">uid</span><span class="p">,</span><span class="n">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">469</span>	<span class="n">AUE_FSTATAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fstatat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">470</span>	<span class="n">AUE_FSTATAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fstatat64</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">ub</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">471</span>	<span class="n">AUE_LINKAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">linkat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd1</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">fd2</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">link</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">472</span>	<span class="n">AUE_UNLINKAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">unlinkat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flag</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">473</span>	<span class="n">AUE_READLINKAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">readlinkat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufsize</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">474</span>	<span class="n">AUE_SYMLINKAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">symlinkat</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="o">*</span><span class="n">path1</span><span class="p">,</span> <span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path2</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">475</span>	<span class="n">AUE_MKDIRAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mkdirat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">476</span>	<span class="n">AUE_GETATTRLISTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getattrlistat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">u_long</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">477</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">proc_trace_log</span><span class="p">(</span><span class="n">pid_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">uniqueid</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">478</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">bsdthread_ctl</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">arg1</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">arg2</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">arg3</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">479</span>	<span class="n">AUE_OPENBYID_RWT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">openbyid_np</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">fsid</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">objid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">oflags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">480</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">recvmsg_x</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">struct</span> <span class="n">msghdr_x</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">cnt</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">481</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">sendmsg_x</span><span class="p">(</span><span class="ne">int</span> <span class="n">s</span><span class="p">,</span> <span class="n">struct</span> <span class="n">msghdr_x</span> <span class="o">*</span><span class="n">msgp</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">cnt</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">480</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">481</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">482</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">thread_selfusage</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_CSR</span>
</span></span><span class="line"><span class="cl"><span class="mi">483</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">csrctl</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">op</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">useraddr</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">usersize</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">483</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* CSR */</span>
</span></span><span class="line"><span class="cl"><span class="mi">484</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">guarded_open_dprotected_np</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">path</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">guardflags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dpclass</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dpflags</span><span class="p">,</span> <span class="ne">int</span> <span class="n">mode</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">485</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">guarded_write_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">cbuf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">486</span>	<span class="n">AUE_PWRITE</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">guarded_pwrite_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buf</span><span class="p">,</span> <span class="n">user_size_t</span> <span class="n">nbyte</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">487</span>	<span class="n">AUE_WRITEV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">guarded_writev_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">guardid_t</span> <span class="o">*</span><span class="n">guard</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">488</span>	<span class="n">AUE_RENAMEAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">renameatx_np</span><span class="p">(</span><span class="ne">int</span> <span class="n">fromfd</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="ne">int</span> <span class="n">tofd</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">to</span><span class="p">,</span> <span class="n">u_int</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_CODE_DECRYPTION</span>
</span></span><span class="line"><span class="cl"><span class="mi">489</span>	<span class="n">AUE_MPROTECT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">mremap_encrypted</span><span class="p">(</span><span class="n">caddr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cryptid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cputype</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">cpusubtype</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">489</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if NETWORKING</span>
</span></span><span class="line"><span class="cl"><span class="mi">490</span>	<span class="n">AUE_NETAGENT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">netagent_trigger</span><span class="p">(</span><span class="n">uuid_t</span> <span class="n">agent_uuid</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">agent_uuidlen</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">490</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* NETWORKING */</span>
</span></span><span class="line"><span class="cl"><span class="mi">491</span>	<span class="n">AUE_STACKSNAPSHOT</span> <span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">stack_snapshot_with_config</span><span class="p">(</span><span class="ne">int</span> <span class="n">stackshot_config_version</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">stackshot_config</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">stackshot_config_size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_TELEMETRY</span>
</span></span><span class="line"><span class="cl"><span class="mi">492</span>	<span class="n">AUE_STACKSNAPSHOT</span> <span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">microstackshot</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">tracebuf</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">tracebuf_size</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">492</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* CONFIG_TELEMETRY */</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if PGO</span>
</span></span><span class="line"><span class="cl"><span class="mi">493</span> 	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">grab_pgo_data</span> <span class="p">(</span><span class="n">user_addr_t</span> <span class="n">uuid</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">user_ssize_t</span> <span class="n">size</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">493</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_PERSONAS</span>
</span></span><span class="line"><span class="cl"><span class="mi">494</span>	<span class="n">AUE_PERSONA</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">persona</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">struct</span> <span class="n">kpersona_info</span> <span class="o">*</span><span class="n">info</span><span class="p">,</span> <span class="n">uid_t</span> <span class="o">*</span><span class="n">id</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">idlen</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">494</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif</span>
</span></span><span class="line"><span class="cl"><span class="mi">495</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">496</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">mach_eventlink_signal</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">eventlink_port</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">signal_count</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">497</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">mach_eventlink_wait_until</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">eventlink_port</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">wait_count</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">deadline</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">clock_id</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">option</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">498</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">mach_eventlink_signal_wait_until</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">eventlink_port</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">wait_count</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">signal_count</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">deadline</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">clock_id</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">option</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">499</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">work_interval_ctl</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">work_interval_id</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">arg</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">500</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">getentropy</span><span class="p">(</span><span class="n">void</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if NECP</span>
</span></span><span class="line"><span class="cl"><span class="mi">501</span>	<span class="n">AUE_NECP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">necp_open</span><span class="p">(</span><span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">502</span>	<span class="n">AUE_NECP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">necp_client_action</span><span class="p">(</span><span class="ne">int</span> <span class="n">necp_fd</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">action</span><span class="p">,</span> <span class="n">uuid_t</span> <span class="n">client_id</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">client_id_len</span><span class="p">,</span> <span class="n">uint8_t</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">buffer_size</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">501</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">502</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* NECP */</span>
</span></span><span class="line"><span class="cl"><span class="mi">503</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">504</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">505</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">506</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">507</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">508</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">509</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">510</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">511</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">512</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">513</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">514</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">515</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ulock_wait</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">addr</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">timeout</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">516</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ulock_wake</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">addr</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">wake_value</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">517</span>	<span class="n">AUE_FCLONEFILEAT</span>	<span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">fclonefileat</span><span class="p">(</span><span class="ne">int</span> <span class="n">src_fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dst_dirfd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">dst</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">518</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">fs_snapshot</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">op</span><span class="p">,</span> <span class="ne">int</span> <span class="n">dirfd</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">name1</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">name2</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">data</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">519</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">520</span>	<span class="n">AUE_KILL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">terminate_with_payload</span><span class="p">(</span><span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">reason_namespace</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_code</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">payload</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">payload_size</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">reason_string</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">521</span>	<span class="n">AUE_EXIT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">void</span> <span class="n">abort_with_payload</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">reason_namespace</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_code</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">payload</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">payload_size</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">reason_string</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_flags</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if NECP</span>
</span></span><span class="line"><span class="cl"><span class="mi">522</span>	<span class="n">AUE_NECP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">necp_session_open</span><span class="p">(</span><span class="ne">int</span> <span class="n">flags</span><span class="p">);</span> <span class="p">}</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">523</span>	<span class="n">AUE_NECP</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">necp_session_action</span><span class="p">(</span><span class="ne">int</span> <span class="n">necp_fd</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">action</span><span class="p">,</span> <span class="n">uint8_t</span> <span class="o">*</span><span class="n">in_buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">in_buffer_length</span><span class="p">,</span> <span class="n">uint8_t</span> <span class="o">*</span><span class="n">out_buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">out_buffer_length</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else /* NECP */</span>
</span></span><span class="line"><span class="cl"><span class="mi">522</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">523</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* NECP */</span>
</span></span><span class="line"><span class="cl"><span class="mi">524</span>	<span class="n">AUE_SETATTRLISTAT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">setattrlistat</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">struct</span> <span class="n">attrlist</span> <span class="o">*</span><span class="n">alist</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">attributeBuffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">bufferSize</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">options</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">525</span>	<span class="n">AUE_NET</span>		<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">net_qos_guideline</span><span class="p">(</span><span class="n">struct</span> <span class="n">net_qos_param</span> <span class="o">*</span><span class="n">param</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">param_len</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">526</span>	<span class="n">AUE_FMOUNT</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">fmount</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">type</span><span class="p">,</span> <span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">data</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">527</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ntp_adjtime</span><span class="p">(</span><span class="n">struct</span> <span class="n">timex</span> <span class="o">*</span><span class="n">tp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">528</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">ntp_gettime</span><span class="p">(</span><span class="n">struct</span> <span class="n">ntptimeval</span> <span class="o">*</span><span class="n">ntvp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">529</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">os_fault_with_payload</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">reason_namespace</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_code</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">payload</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">payload_size</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">reason_string</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">reason_flags</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_WORKQUEUE</span>
</span></span><span class="line"><span class="cl"><span class="mi">530</span>	<span class="n">AUE_WORKLOOPCTL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">kqueue_workloop_ctl</span><span class="p">(</span><span class="n">user_addr_t</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">options</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">addr</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">sz</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">530</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif // CONFIG_WORKQUEUE</span>
</span></span><span class="line"><span class="cl"><span class="mi">531</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">__mach_bridge_remote_time</span><span class="p">(</span><span class="n">uint64_t</span> <span class="n">local_timestamp</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if CONFIG_COALITIONS</span>
</span></span><span class="line"><span class="cl"><span class="mi">532</span> <span class="n">AUE_NULL</span>  <span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">coalition_ledger</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="o">*</span><span class="n">cid</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="o">*</span><span class="n">bufsize</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">532</span>   <span class="n">AUE_NULL</span>    <span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif // CONFIG_COALITIONS</span>
</span></span><span class="line"><span class="cl"><span class="mi">533</span>     <span class="n">AUE_NULL</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">log_data</span><span class="p">(</span><span class="n">unsigned</span> <span class="ne">int</span> <span class="n">tag</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">flags</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">unsigned</span> <span class="ne">int</span> <span class="n">size</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">534</span> <span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">uint64_t</span> <span class="n">memorystatus_available_memory</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">535</span> <span class="n">AUE_NULL</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">enosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">536</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">shared_region_map_and_slide_2_np</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">files_count</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">shared_file_np</span> <span class="o">*</span><span class="n">files</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">mappings_count</span><span class="p">,</span> <span class="k">const</span> <span class="n">struct</span> <span class="n">shared_file_mapping_slide_np</span> <span class="o">*</span><span class="n">mappings</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">537</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">pivot_root</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">new_rootfs_path_before</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">old_rootfs_path_after</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">538</span> <span class="n">AUE_TASKINSPECTFORPID</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">task_inspect_for_pid</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">target_tport</span><span class="p">,</span> <span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="n">mach_port_name_t</span> <span class="o">*</span><span class="n">t</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">539</span> <span class="n">AUE_TASKREADFORPID</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">task_read_for_pid</span><span class="p">(</span><span class="n">mach_port_name_t</span> <span class="n">target_tport</span><span class="p">,</span> <span class="ne">int</span> <span class="n">pid</span><span class="p">,</span> <span class="n">mach_port_name_t</span> <span class="o">*</span><span class="n">t</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">540</span>	<span class="n">AUE_PREADV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">sys_preadv</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">541</span>	<span class="n">AUE_PWRITEV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">sys_pwritev</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">542</span>	<span class="n">AUE_PREADV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">sys_preadv_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">543</span>	<span class="n">AUE_PWRITEV</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="n">user_ssize_t</span> <span class="n">sys_pwritev_nocancel</span><span class="p">(</span><span class="ne">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">struct</span> <span class="n">iovec</span> <span class="o">*</span><span class="n">iovp</span><span class="p">,</span> <span class="ne">int</span> <span class="n">iovcnt</span><span class="p">,</span> <span class="n">off_t</span> <span class="n">offset</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">544</span>     <span class="n">AUE_NULL</span>        <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">ulock_wait2</span><span class="p">(</span><span class="n">uint32_t</span> <span class="n">operation</span><span class="p">,</span> <span class="n">void</span> <span class="o">*</span><span class="n">addr</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">value</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">timeout</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">value2</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">545</span>	<span class="n">AUE_PROCINFO</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">proc_info_extended_id</span><span class="p">(</span><span class="n">int32_t</span> <span class="n">callnum</span><span class="p">,</span> <span class="n">int32_t</span> <span class="n">pid</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flavor</span><span class="p">,</span> <span class="n">uint32_t</span> <span class="n">flags</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">ext_id</span><span class="p">,</span> <span class="n">uint64_t</span> <span class="n">arg</span><span class="p">,</span> <span class="n">user_addr_t</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">int32_t</span> <span class="n">buffersize</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#if SOCKETS</span>
</span></span><span class="line"><span class="cl"><span class="mi">546</span>     <span class="n">AUE_TRACKERACTION</span>       <span class="n">ALL</span>     <span class="p">{</span> <span class="ne">int</span> <span class="n">tracker_action</span><span class="p">(</span><span class="ne">int</span> <span class="n">action</span><span class="p">,</span> <span class="n">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">buffer_size</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#else</span>
</span></span><span class="line"><span class="cl"><span class="mi">546</span>	<span class="n">AUE_NULL</span>	<span class="n">ALL</span>	<span class="p">{</span> <span class="ne">int</span> <span class="n">nosys</span><span class="p">(</span><span class="n">void</span><span class="p">);</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">#endif /* SOCKETS */</span>
</span></span><span class="line"><span class="cl"><span class="mi">547</span> <span class="n">AUE_DEBUG_SYSCALL_REJECT</span>	<span class="n">ALL</span> <span class="p">{</span> <span class="ne">int</span> <span class="n">debug_syscall_reject</span><span class="p">(</span><span class="n">uint64_t</span> <span class="n">packed_selectors</span><span class="p">)</span> <span class="n">NO_SYSCALL_STUB</span><span class="p">;</span> <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>