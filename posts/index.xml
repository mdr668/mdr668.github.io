<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - mdr's Blog</title><link>/posts/</link><description>所有文章 | mdr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 26 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml"/><item><title>LLVM 编译脚本</title><link>/llvm-%E7%BC%96%E8%AF%91%E8%84%9A%E6%9C%AC/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><author>mdr</author><guid>/llvm-%E7%BC%96%E8%AF%91%E8%84%9A%E6%9C%AC/</guid><description>https://heroims.github.io/2021/11/09/OLLVM%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E7%A7%BB%E6%A4%8D%E4%B8%8E%E4%BD%BF%E7%94%A8(%E7%BB%AD)/ 2.1 新建build目录（mkdir build） 2.2 进入build目录（cd build） 2.3 cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_CREATE_XCODE_TOOLCHAIN=ON -DLLVM_INCLUDE_TESTS=OFF ../obfuscator/ 2.4 make -j8 3.1 sudo make install-xcode-toolchain 3.2 sudo mv /usr/local/Toolchains /Library/Developer/ 或者手动将/usr/</description></item><item><title>PlayCover 功能调研</title><link>/playcover-%E5%8A%9F%E8%83%BD%E8%B0%83%E7%A0%94/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><author>mdr</author><guid>/playcover-%E5%8A%9F%E8%83%BD%E8%B0%83%E7%A0%94/</guid><description>PlayCover 功能调研 github 地址</description></item><item><title>解决谷歌翻译失效问题</title><link>/%E8%A7%A3%E5%86%B3%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><author>mdr</author><guid>/%E8%A7%A3%E5%86%B3%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</guid><description>解决谷歌翻译失效问题 PAC添加规则 1 2 3 4 5 6 7 8 9 10 11 ! Put user rules line by line in this file. ! See https://adblockplus.org/en/filter-cheatsheet ||github.com ||v2ex.com @@||soulapp-inc.cn ||api.github.com ||githubusercontent.com ||google.com ||translate.google.com ||translate.googleapis.com ||*.googleapis.com 修改host 1 2 3 4 5 6 7 142.250.4.90 translate.googleapis.com 142.250.30.90 translate.googleapis.com 142.250.101.90 translate.googleapis.com 142.250.105.90</description></item><item><title>使用 LLDBTrace 还原算法</title><link>/%E4%BD%BF%E7%94%A8-lldbtrace-%E8%BF%98%E5%8E%9F%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><author>mdr</author><guid>/%E4%BD%BF%E7%94%A8-lldbtrace-%E8%BF%98%E5%8E%9F%E7%AE%97%E6%B3%95/</guid><description>lldbtrace链接 https://github.com/yangyss/lldb-trace 首先利用 lldbtrace 处理一个BUG 有个经过 VMP 加固的结果一直不符合预期,大概定位一下位置 1 2 3 4 5 6 7 8 9 memset(dest,0,0x10000); ByteToHexStr(dvChr,dest,dvChrLen); printf(&amp;#</description></item><item><title>zingfront 逆向笔记</title><link>/zingfront-%E9%80%86%E5%90%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>mdr</author><guid>/zingfront-%E9%80%86%E5%90%91/</guid><description>zingfront 逆向笔记 确定参数来源 拼接组装待加密的参数: 1 2 3 4 5 6 7 2825b4500 0a 0b 69 50 68 6f 6e 65 20 31 33 2e 37 12 12 61 ..iPhone 13.7..a 2825b4510 66 6d 61 2d 73 64 6b 2d 69 2d 76 37 2e 36 39 2e fma-sdk-i-v7.69. 2825b4520 30 c8 01</description></item></channel></rss>